def = rowSums(ranked_probs * (1-ranked_off_mat))) %>%
mutate(None = 1 - off - def)
pass_probs
1-pass_probs$off-pass_probs$def
pass_probs$off+pass_probs$def
pass_probs <- data.frame(off = rowSums(ranked_probs * ranked_off_mat),
def = rowSums(ranked_probs * (1-ranked_off_mat))) %>%
mutate(None = min(1 - off - def,1))
pass_probs
pass_probs <- data.frame(off = rowSums(ranked_probs * ranked_off_mat),
def = rowSums(ranked_probs * (1-ranked_off_mat))) %>%
mutate(None = min(1 - off - def,0))
pass_probs
pass_probs <- data.frame(off = rowSums(ranked_probs * ranked_off_mat),
def = rowSums(ranked_probs * (1-ranked_off_mat))) %>%
mutate(None = 1 - off - def)
pass_probs
pass_probs <- data.frame(off = rowSums(ranked_probs * ranked_off_mat),
def = rowSums(ranked_probs * (1-ranked_off_mat))) %>%
mutate(None = max(1 - off - def,0))
pass_probs
pass_probs <- data.frame(off = rowSums(ranked_probs * ranked_off_mat),
def = rowSums(ranked_probs * (1-ranked_off_mat))) %>%
mutate(None = 1 - off - def)
ifelse(pass_probs$None<0,0,pass_probs$None)
pass_probs <- data.frame(off = rowSums(ranked_probs * ranked_off_mat),
def = rowSums(ranked_probs * (1-ranked_off_mat))) %>%
mutate(None = 1 - off - def)
pass_probs$None = ifelse(pass_probs$None<0,0,pass_probs$None)
adj_offence = pass_probs$off
if(nrow(pass_probs)>1){
for (r in 2:nrow(pass_probs)){
pass_probs[r,] = pass_probs[r,] * pass_probs$None[r-1]
}
}
#Finalize the summary data that has been collected for each point along the trajectory and it's probability of being picked up the offence, defence and no one
#Additionally the points data.frame includes previously calculated...
#all_ctrl:
#score_prob:
#pass_value:
all_data_probs <- cbind(points,pass_probs)
colnames(all_data_probs) <- c("theta","x","y","t","all_ctrl","score_prob","pass_value","off","def","None")
#the probability that the offence successfully retrieved the puck along the way
cum_pass_off = cumsum(all_data_probs$off)
cum_pass_def = cumsum(all_data_probs$def)
#the quality of the point by determining how valuable the target multiplied by offensive pickup probability along the way
cum_pass_good = all_data_probs$pass_value*cum_pass_off
adj_pass_value = all_data_probs$pass_value*adj_offence
location_pass_value = all_data_probs$pass_value*all_data_probs$off
keep_possesion_prob = cumsum(all_data_probs$off)
expected_pass_value = sum(location_pass_value)
max_pass_value = max(all_data_probs$pass_value)
best_case_pass_value = max(adj_pass_value)
successful_pass_prob = sum(all_data_probs$off)
mat_to_return = cbind(points,adj_pass_value,off_prob=all_data_probs$off,def_prob=all_data_probs$def,none_prob=all_data_probs$None,location_pass_value,keep_possesion_prob,expected_pass_value=expected_pass_value,max_pass_value=max_pass_value,best_case_pass_value=best_case_pass_value,successful_pass_prob=successful_pass_prob)
mat_to_return %>% summary()
load.libraries = c("rjson", "jsonlite", "tidyverse", "gganimate","ggpmisc","ggnewscale","viridis","tictoc","scales")
install.lib = load.libraries[!load.libraries %in% installed.packages()]
for (libs in install.lib) {install.packages(libs, dependencies = TRUE)}
sapply(load.libraries, require, character = TRUE)
time_step = seq(0.01,10,0.05) #extra fine scale
#time_step = seq(0.05,10,0.05) #regular scale
#theta_scale = 0.01 #extra fine scale
theta_scale = 0.05 #regular scale
#speed_puck = 90 #ft/s
speed_puck = 55 #ft/s
#speed_puck = 40 #ft/s
#source("C:/Users/thepi/OneDrive/Documents/Python/Hockey/Big-Data-Cup-2022-Private/code/visualization/hockey_pipeline.R")
#setwd("C:/Users/thepi/OneDrive/Documents/Python/Hockey/Big-Data-Cup-2022-Private")
source("C:/Users/Paula/Desktop/Big-Data-Cup-2022-Private/code/visualization/hockey_pipeline.R")
setwd("C:/Users/Paula/Desktop/Big-Data-Cup-2022-Private")
#json_file <- "data/BDC_2022_all_data.json"
#json_file <- "data/BDC_2022_all_direct_wFrames.json"
json_file <- "data/BDC_2022_passOnly.json"
dat <- fromJSON(json_file)
# Set up the event data to be in a data frame.
json_events <- lapply(dat[1:28], function(x) {
x[sapply(x, is.null)] <- NA
unlist(x)
})
current_event <- as.data.frame(do.call("cbind", json_events))
current_event$team_name[current_event$team_name=="Olympic (Women) - Canada"]="Canada"
current_event$team_name[current_event$team_name=="Olympic (Women) - United States"]="USA"
current_event$team_name[current_event$team_name=="Olympic (Women) - Finland"]="Finland"
current_event$team_name[current_event$team_name=="Olympic (Women) - Olympic Athletes from Russia"]="ROC"
current_event$team_name[current_event$team_name=="Olympic (Women) - Switzerland"]="Switzerland"
current_event$x_coord = current_event$x_coord %>% as.double()
current_event$y_coord = current_event$y_coord %>% as.double()
current_event$x_coord_2 = current_event$x_coord_2 %>% as.double()
current_event$y_coord_2 = current_event$y_coord_2 %>% as.double()
current_event$x_coord[current_event$x_coord < 100] = 200-current_event$x_coord[current_event$x_coord < 100]
current_event$x_coord_2[which(current_event$x_coord_2 < 100)] = 200-current_event$x_coord_2[which(current_event$x_coord_2 < 100)]
current_event$y_coord = 85-current_event$y_coord
current_event$y_coord_2 = 85-current_event$y_coord_2
vel_ang = calc_vmag_ang(current_event)
current_event$vel_init = vel_ang[,1]
current_event$ang_init = vel_ang[,2]
#r=0 # powerplay of interest
t_track=273 # 11, 393, 406 is right before a goal, 221 passer not in view
#69 is the first images I shared
line1 <- paste('dat$tracks$\'',(t_track-1),'\'',sep='')
line2 <- eval(parse(text=line1))
if(length(line2$frame_id)!=0){
json_tracks <- lapply(line2, function(x) {
x[sapply(x, is.null)] <- NA
unlist(x)
})
current_track <- as.data.frame(do.call("cbind", json_tracks))
}
current_track$frame_id = current_track$frame_id %>% as.integer()
current_track$period = current_track$period %>% as.integer()
current_track$track_id = current_track$track_id %>% as.integer()
current_track$jersey_number = current_track$jersey_number %>% as.integer()
current_track$x_ft = current_track$x_ft %>% as.double()
current_track$y_ft = current_track$y_ft %>% as.double()
current_track$vel_x = current_track$vel_x %>% as.double()
current_track$vel_y = current_track$vel_y %>% as.double()
current_track$vel_x[which(current_track$vel_x==0)]=0.05
current_track$vel_y[which(current_track$vel_y==0)]=0.05
current_track$goalie = ifelse(current_track$goalie =='TRUE',T,F)
if(current_track$x_ft[1]<100){
current_track$x_ft = 200 - current_track$x_ft
current_track$vel_x = -current_track$vel_x
}
event_info <- current_event[t_track,] %>% select(team_name,Player_1_num,Player_2_num)
off <- event_info$team_name
puck = current_track[current_track$jersey_number==event_info$Player_1_num,] %>% select(team_name,x_ft,y_ft)
puck = puck[puck$team_name==off,]
n_players <- table(current_track$team_name)
n_off <- sum(n_players[names(n_players)==off])
n_def <- sum(n_players[names(n_players)!=off])
x_p = current_event[t_track,"x_coord"]#puck$x_ft
y_p = current_event[t_track,"y_coord"]#puck$y_ft
if(abs(y_p-puck$y_ft)>20){
y_p = 85-y_p
}
theta = seq(-pi,pi,by=theta_scale)
passes = data.frame(angle=c(),x=c(),y=c(), t=c())
for(angle in theta){
passes = rbind(passes,cbind(angle,puck_motion_model2(x_p,y_p,angle)))
}
new_pass <- clean_pass(passes)
calc_pass <- new_pass %>% group_by(angle) %>% top_n(1, t)
new_pass <- rbind(new_pass,c(new_pass$angle[1],x_p,y_p,0))
xyt <- new_pass %>% select(x,y,t)
loc_vel <- current_track %>% mutate(team_label = ifelse(team_name == off,1,-1)) %>%
select(x_ft,y_ft,vel_x,vel_y, team_label, goalie)
# options(warn=-1)
new_pass <- new_pass %>%
mutate(all_ctrl = teamwise_ice_ctrl_xyt(loc_vel, xyt), score_prob = apply(xyt,1,score_prob)) %>%
mutate(pass_value = score_prob * ((all_ctrl+1)/2)^1)
# Create image of this frame with potential passes
plot_rink(ggplot(current_track)) +
geom_point(aes(x = x_ft, y = y_ft, fill = team_name), size = 5, shape = 21) +
geom_text(aes(x = x_ft, y = y_ft, label = jersey_number, colour = team_name), size = 3) +
geom_point(aes(x = x_p, y = y_p), size = 2, shape = 16, colour='black') +
geom_segment(aes(x = x_p, y = y_p, xend = puck$x_ft, yend = puck$y_ft),size=1.5, colour='brown')+
geom_point(data = new_pass, aes(x = x, y = y), size = 1, shape = 4) +
scale_colour_manual(values = c("USA" = "white", "Canada" = "white")) +
scale_fill_manual(values = c("USA" = "blue", "Canada" = "red")) +
labs(fill = "Team") +
guides(colour = "none")+
geom_segment(aes(x = x_ft, y = y_ft, xend = x_ft+vel_x, yend = y_ft+vel_y), #/sqrt(vel_x^2+vel_y^2) to get r=1
arrow = arrow(length = unit(0.2, "cm")),size=1, colour='cyan')
plot_rink(ggplot(current_track)) +
geom_point(aes(x = x_ft, y = y_ft, fill = team_name), size = 5, shape = 21) +
geom_text(aes(x = x_ft, y = y_ft, label = jersey_number, colour = team_name), size = 3) +
geom_point(aes(x = x_p, y = y_p), size = 2, shape = 16, colour='black') +
geom_point(data = calc_pass, aes(x = x, y = y), size = 1, shape = 4) +
geom_segment(aes(x = x_p, y = y_p, xend = puck$x_ft, yend = puck$y_ft),size=1.5, colour='brown')+
scale_colour_manual(values = c("USA" = "white", "Canada" = "white")) +
scale_fill_manual(values = c("USA" = "blue", "Canada" = "red")) +
labs(fill = "Team") +
guides(colour = "none")+
geom_segment(aes(x = x_ft, y = y_ft, xend = x_ft+vel_x, yend = y_ft+vel_y), #/sqrt(vel_x^2+vel_y^2) to get r=1
arrow = arrow(length = unit(0.2, "cm")),size=1, colour='cyan')
angle_pass <- c(0.8584073,	159.4813,	43.145456,	1.26,	-3.333331e-01,	0.323105039,	1.077017e-01)#calc_pass[81,]
point_val = probs_to_point(x_p,y_p,angle_pass,new_pass,current_track,off,TRUE)
#observed_angle_pass <- calc_pass[which.min(abs(calc_pass$angle-(-pi/2+current_event[t_track,"ang_init"]))),]
#observed_angle_pass <- calc_pass[which.min(abs(calc_pass$angle-current_event[t_track,"ang_init"])),]
#point_val = probs_to_point(x_p,y_p,observed_angle_pass,new_pass,current_track,off,TRUE)
point_val[[1]]
point_val[[2]]
points1=angle_pass
points1=rbind(data.frame('theta'=double(),'x'=double(),'y'=double(),'t'=double()),points1)
names(points1)=c('theta','x','y','t')
points=rbind(data.frame('theta'=double(),'x'=double(),'y'=double(),'t'=double(),'all_ctrl'=double(), 'score_prob'=double(), 'pass_value'=double()),all_ang[which(round(all_ang$angle,4)==round(points1$theta,4)),])
names(points)=c('theta','x','y','t','all_ctrl', 'score_prob', 'pass_value')
#We remove the player passing the puck in our calculations as we do not want a player to "pass to themselves"
tracks = tracks1[-which.min((tracks1$x_ft-x_puck)^2+(tracks1$y_ft-y_puck)^2),]
#Given the team that is on the offence, identify the name of the defence
teams = tracks$team_name %>% unique()
defence = teams[-which(teams==offence)]
#Give the current angle to pass can travel, we look at all equally spaced (through time) points along that trajectory and use the motion model
#dist_to_xyt to determine how close the player can get to the point of interest in the given time frame
dist_to_points = matrix(nrow=nrow(points), ncol=nrow(tracks))
for(player in 1:nrow(tracks)){
dist_to_points[,player]=apply(points,1,dist_to_xyt,x0=tracks$x_ft[player],y0=tracks$y_ft[player],vx=tracks$vel_x[player],vy=tracks$vel_y[player])
}
dist_to_points[,tracks$goalie] = ifelse(((points$x-189)^2 +(points$y-42.5)^2) <= goalie_dist^2,
dist_to_points[,tracks$goalie],
pmax(dist_to_points[,tracks$goalie],((points$x-189)^2 +(points$y-42.5)^2)^0.5-goalie_dist))
#Given how close a player gets to their target, we place a Gaussian distribution at that point to add some variability to how close the player can get
#and associate a probability to whether or not their could intercept the puck. We use stick length as the standard deviation. This is done for all players
#except the passer for each potential intercept point along a trajectory
#t_star = 1- pmin(abs(dist_to_points+stick)/(2*stick),1)-pmin(abs(dist_to_points-stick)/(2*stick),1)
#1-(abs(dist_to_points+stick)/stick)^3
if(length(points$t)>1){
norm_probs = abs(pnorm((dist_to_points+stick)/stick)-pnorm((dist_to_points-stick)/stick))*abs(points$t[2]-points$t[1])/time_penalty
}else{
norm_probs = abs(pnorm((dist_to_points+stick)/stick)-pnorm((dist_to_points-stick)/stick))*(points$t[1])/time_penalty
}
pickup_probs = norm_probs*(tracks$team_name==offence)*(1-exp(-points$t/tr))+norm_probs*(tracks$team_name!=offence)*(1-exp(-points$t/(tr+0.1)))
#Combine the original (angle, x,y,t) points we are evaluating with the pickup probabilities of each player determined in the previous step
#Split the probabilities into offence and defence
off_lines = which(tracks$team_name==offence)
def_lines = which(tracks$team_name!=offence)
off_probs = pickup_probs[,off_lines]
def_probs = pickup_probs[,def_lines]
off_probs
min(off_probs)
def_probs = pickup_probs[,def_lines]
min(def_probs)
max(def_probs)
max(off_probs)
#Pre-fill a matrix with rank 1 to the number of players who can intercept the puck
rank_mat = t(replicate(nrow(pickup_probs),tracks$team_name==offence))
#Use the probabilities of each player getting to a target to rank them. The player to arrive first, has the best rank and chance to pickup the puck first
all_rank = t(apply(-pickup_probs,1,rank))
rix <-  as.vector(t(replicate(ncol(pickup_probs),seq(1,nrow(pickup_probs),1))))
#Each player following the highest rank has a smaller chance at getting the puck because it is conditional on the player before they getting to that point and missing
#We update the probability player i picks up the puck using p_i(new)=p_i(old)*product_j=1^i-1 of (1-p_j)
ranked_probs <-  pickup_probs * 0
ranked_probs[cbind(rix,as.vector(t(all_rank)))] <- as.vector(t(pickup_probs))
if(ncol(ranked_probs)>1){
ranked_probs[,2] = ranked_probs[,2]*(1-ranked_probs[,1])
if(ncol(ranked_probs)>2){
for (c in 3:ncol(ranked_probs)){
ranked_probs[,c] = ranked_probs[,c]*(1-ranked_probs[,c-1])
}
}
}
ranked_probs
ranked_probs %>% summary()
#Similarly to above, if there are n_p points along the trajectory, the chance someone picks up the puck at the 3rd point is conditional on no one getting the puck
#at points 1 or 2. We update these probabilities using the same method as above.
ranked_off_mat <- rank_mat * 0
ranked_off_mat[cbind(rix,as.vector(t(all_rank)))] <- as.vector(t(rank_mat))
pass_probs <- data.frame(off = rowSums(ranked_probs * ranked_off_mat),
def = rowSums(ranked_probs * (1-ranked_off_mat))) %>%
mutate(None = 1 - off - def)
pass_probs %>% summary()
pass_probs$None<0
pass_probs$None
pass_probs
1-3.895289e-01 -0.633122784
pass_probs$None = ifelse(pass_probs$None<0,0,pass_probs$None) # fix for rounding errors
adj_offence = pass_probs$off
if(nrow(pass_probs)>1){
for (r in 2:nrow(pass_probs)){
pass_probs[r,] = pass_probs[r,] * pass_probs$None[r-1]
}
}
#Finalize the summary data that has been collected for each point along the trajectory and it's probability of being picked up the offence, defence and no one
#Additionally the points data.frame includes previously calculated...
#all_ctrl:
#score_prob:
#pass_value:
all_data_probs <- cbind(points,pass_probs)
colnames(all_data_probs) <- c("theta","x","y","t","all_ctrl","score_prob","pass_value","off","def","None")
#the probability that the offence successfully retrieved the puck along the way
cum_pass_off = cumsum(all_data_probs$off)
cum_pass_def = cumsum(all_data_probs$def)
#the quality of the point by determining how valuable the target multiplied by offensive pickup probability along the way
cum_pass_good = all_data_probs$pass_value*cum_pass_off
adj_pass_value = all_data_probs$pass_value*adj_offence
location_pass_value = all_data_probs$pass_value*all_data_probs$off
keep_possesion_prob = cumsum(all_data_probs$off)
expected_pass_value = sum(location_pass_value)
max_pass_value = max(all_data_probs$pass_value)
best_case_pass_value = max(adj_pass_value)
successful_pass_prob = sum(all_data_probs$off)
mat_to_return = cbind(points,adj_pass_value,off_prob=all_data_probs$off,def_prob=all_data_probs$def,none_prob=all_data_probs$None,location_pass_value,keep_possesion_prob,expected_pass_value=expected_pass_value,max_pass_value=max_pass_value,best_case_pass_value=best_case_pass_value,successful_pass_prob=successful_pass_prob)
mat_to_return %>% summary()
cumsum(mat_to_return$off_prob)
cumsum(mat_to_return$off_prob)+mat_to_return$none_prob
cumsum(mat_to_return$off_prob)+cumsum(mat_to_return$def_prob)+mat_to_return$none_prob
angle_pass <- c(0.8584073,	159.4813,	43.145456,	1.26,	-3.333331e-01,	0.323105039,	1.077017e-01)#calc_pass[81,]
point_val = probs_to_point(x_p,y_p,angle_pass,new_pass,current_track,off,TRUE)
#observed_angle_pass <- calc_pass[which.min(abs(calc_pass$angle-(-pi/2+current_event[t_track,"ang_init"]))),]
#observed_angle_pass <- calc_pass[which.min(abs(calc_pass$angle-current_event[t_track,"ang_init"])),]
#point_val = probs_to_point(x_p,y_p,observed_angle_pass,new_pass,current_track,off,TRUE)
point_val[[1]]
point_val[[2]]
all_point_val <- apply(calc_pass,1,probs_to_point,x_puck=x_p,y_puck=y_p,all_ang=new_pass,tracks1=current_track,offence=off,want_plot=FALSE)
pass_potential <- bind_rows(all_point_val, .id = "column_label")
pass_potential
#pass_potential$pass_good = pass_potential$pass_good %>% rescale()
p <- ggplot(data = pass_potential,aes(x = x, y = y)) +
geom_point(aes(color = all_ctrl),size=2, shape=16) +
scale_colour_gradient2(na.value="white",low = muted("green"), mid = "white", high = muted("purple"))+#,midpoint = 0.5
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
#geom_point(aes(x = x, y = y), size = 1, shape = 4)+
new_scale_fill() +
new_scale_color() +
geom_point(data=current_track,aes(x = x_ft, y = y_ft, fill = team_name), size = 5, shape = 21) +
geom_text(data=current_track,aes(x = x_ft, y = y_ft, label = jersey_number, colour = team_name), size = 3) +
geom_segment(aes(x = x_p, y = y_p, xend = puck$x_ft, yend = puck$y_ft),size=1.5, colour='brown')+
geom_point(aes(x = x_p, y = y_p), size = 2, shape = 16, colour='black') +
scale_colour_manual(values = c("USA" = "white", "Canada" = "white")) +
scale_fill_manual(values = c("USA" = "blue", "Canada" = "red")) +
labs(fill = "Team") +
guides(colour = "none")+
geom_segment(data=current_track,aes(x = x_ft, y = y_ft, xend = x_ft+vel_x, yend = y_ft+vel_y), #/sqrt(vel_x^2+vel_y^2) to get r=1
arrow = arrow(length = unit(0.2, "cm")),size=1, colour='cyan')
p2 <- ggplot(data = pass_potential,aes(x = x, y = y)) +
geom_point(aes(color = score_prob),size=2, shape=16) +
scale_colour_gradient2(na.value="white",low = muted("green"), mid = "white", high = muted("purple"))+#,midpoint = 0.5
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
#geom_point(aes(x = x, y = y), size = 1, shape = 4)+
new_scale_fill() +
new_scale_color() +
geom_point(data=current_track,aes(x = x_ft, y = y_ft, fill = team_name), size = 5, shape = 21) +
geom_text(data=current_track,aes(x = x_ft, y = y_ft, label = jersey_number, colour = team_name), size = 3) +
geom_segment(aes(x = x_p, y = y_p, xend = puck$x_ft, yend = puck$y_ft),size=1.5, colour='brown')+
geom_point(aes(x = x_p, y = y_p), size = 2, shape = 16, colour='black') +
scale_colour_manual(values = c("USA" = "white", "Canada" = "white")) +
scale_fill_manual(values = c("USA" = "blue", "Canada" = "red")) +
labs(fill = "Team") +
guides(colour = "none")+
geom_segment(data=current_track,aes(x = x_ft, y = y_ft, xend = x_ft+vel_x, yend = y_ft+vel_y), #/sqrt(vel_x^2+vel_y^2) to get r=1
arrow = arrow(length = unit(0.2, "cm")),size=1, colour='cyan')
p3 <- ggplot(data = pass_potential,aes(x = x, y = y)) +
geom_point(aes(color = pass_value),size=2, shape=16) +
scale_colour_gradient2(na.value="white",low = muted("green"), mid = "white", high = muted("purple"))+#,midpoint = 0.5
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
#geom_point(aes(x = x, y = y), size = 1, shape = 4)+
new_scale_fill() +
new_scale_color() +
geom_point(data=current_track,aes(x = x_ft, y = y_ft, fill = team_name), size = 5, shape = 21) +
geom_text(data=current_track,aes(x = x_ft, y = y_ft, label = jersey_number, colour = team_name), size = 3) +
geom_segment(aes(x = x_p, y = y_p, xend = puck$x_ft, yend = puck$y_ft),size=1.5, colour='brown')+
geom_point(aes(x = x_p, y = y_p), size = 2, shape = 16, colour='black') +
scale_colour_manual(values = c("USA" = "white", "Canada" = "white")) +
scale_fill_manual(values = c("USA" = "blue", "Canada" = "red")) +
labs(fill = "Team") +
guides(colour = "none")+
geom_segment(data=current_track,aes(x = x_ft, y = y_ft, xend = x_ft+vel_x, yend = y_ft+vel_y), #/sqrt(vel_x^2+vel_y^2) to get r=1
arrow = arrow(length = unit(0.2, "cm")),size=1, colour='cyan')
p4 <- ggplot(data = pass_potential,aes(x = x, y = y)) +
geom_point(aes(color = adj_pass_value),size=2, shape=16) +
scale_colour_gradient2(na.value="white",low = muted("green"), mid = "white", high = muted("purple"))+#,midpoint = 0.5
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
#geom_point(aes(x = x, y = y), size = 1, shape = 4)+
new_scale_fill() +
new_scale_color() +
geom_point(data=current_track,aes(x = x_ft, y = y_ft, fill = team_name), size = 5, shape = 21) +
geom_text(data=current_track,aes(x = x_ft, y = y_ft, label = jersey_number, colour = team_name), size = 3) +
geom_segment(aes(x = x_p, y = y_p, xend = puck$x_ft, yend = puck$y_ft),size=1.5, colour='brown')+
geom_point(aes(x = x_p, y = y_p), size = 2, shape = 16, colour='black') +
scale_colour_manual(values = c("USA" = "white", "Canada" = "white")) +
scale_fill_manual(values = c("USA" = "blue", "Canada" = "red")) +
labs(fill = "Team") +
guides(colour = "none")+
geom_segment(data=current_track,aes(x = x_ft, y = y_ft, xend = x_ft+vel_x, yend = y_ft+vel_y), #/sqrt(vel_x^2+vel_y^2) to get r=1
arrow = arrow(length = unit(0.2, "cm")),size=1, colour='cyan')
par(mfrow = c(2, 2))
p5 <- ggplot(data = pass_potential,aes(x = x, y = y)) +
geom_point(aes(color = off_prob),size=2, shape=16) +
scale_colour_gradient2(na.value="white",low = muted("green"), mid = "white", high = muted("purple"))+#,midpoint = 0.5
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
#geom_point(aes(x = x, y = y), size = 1, shape = 4)+
new_scale_fill() +
new_scale_color() +
geom_point(data=current_track,aes(x = x_ft, y = y_ft, fill = team_name), size = 5, shape = 21) +
geom_text(data=current_track,aes(x = x_ft, y = y_ft, label = jersey_number, colour = team_name), size = 3) +
geom_segment(aes(x = x_p, y = y_p, xend = puck$x_ft, yend = puck$y_ft),size=1.5, colour='brown')+
geom_point(aes(x = x_p, y = y_p), size = 2, shape = 16, colour='black') +
scale_colour_manual(values = c("USA" = "white", "Canada" = "white")) +
scale_fill_manual(values = c("USA" = "blue", "Canada" = "red")) +
labs(fill = "Team") +
guides(colour = "none")+
geom_segment(data=current_track,aes(x = x_ft, y = y_ft, xend = x_ft+vel_x, yend = y_ft+vel_y), #/sqrt(vel_x^2+vel_y^2) to get r=1
arrow = arrow(length = unit(0.2, "cm")),size=1, colour='cyan')
par(mfrow = c(2, 2))
p6 <- ggplot(data = pass_potential,aes(x = x, y = y)) +
geom_point(aes(color = location_pass_value),size=2, shape=16) +
scale_colour_gradient2(na.value="white",low = muted("green"), mid = "white", high = muted("purple"))+#,midpoint = 0.5
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
#geom_point(aes(x = x, y = y), size = 1, shape = 4)+
new_scale_fill() +
new_scale_color() +
geom_point(data=current_track,aes(x = x_ft, y = y_ft, fill = team_name), size = 5, shape = 21) +
geom_text(data=current_track,aes(x = x_ft, y = y_ft, label = jersey_number, colour = team_name), size = 3) +
geom_segment(aes(x = x_p, y = y_p, xend = puck$x_ft, yend = puck$y_ft),size=1.5, colour='brown')+
geom_point(aes(x = x_p, y = y_p), size = 2, shape = 16, colour='black') +
scale_colour_manual(values = c("USA" = "white", "Canada" = "white")) +
scale_fill_manual(values = c("USA" = "blue", "Canada" = "red")) +
labs(fill = "Team") +
guides(colour = "none")+
geom_segment(data=current_track,aes(x = x_ft, y = y_ft, xend = x_ft+vel_x, yend = y_ft+vel_y), #/sqrt(vel_x^2+vel_y^2) to get r=1
arrow = arrow(length = unit(0.2, "cm")),size=1, colour='cyan')
par(mfrow = c(2, 2))
p7 <- ggplot(data = pass_potential,aes(x = x, y = y)) +
geom_point(aes(color = keep_possesion_prob),size=2, shape=16) +
scale_colour_gradient2(na.value="white",low = muted("green"), mid = "white", high = muted("purple"))+#,midpoint = 0.5
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
#geom_point(aes(x = x, y = y), size = 1, shape = 4)+
new_scale_fill() +
new_scale_color() +
geom_point(data=current_track,aes(x = x_ft, y = y_ft, fill = team_name), size = 5, shape = 21) +
geom_text(data=current_track,aes(x = x_ft, y = y_ft, label = jersey_number, colour = team_name), size = 3) +
geom_segment(aes(x = x_p, y = y_p, xend = puck$x_ft, yend = puck$y_ft),size=1.5, colour='brown')+
geom_point(aes(x = x_p, y = y_p), size = 2, shape = 16, colour='black') +
scale_colour_manual(values = c("USA" = "white", "Canada" = "white")) +
scale_fill_manual(values = c("USA" = "blue", "Canada" = "red")) +
labs(fill = "Team") +
guides(colour = "none")+
geom_segment(data=current_track,aes(x = x_ft, y = y_ft, xend = x_ft+vel_x, yend = y_ft+vel_y), #/sqrt(vel_x^2+vel_y^2) to get r=1
arrow = arrow(length = unit(0.2, "cm")),size=1, colour='cyan')
par(mfrow = c(2, 2))
p8 <- ggplot(data = pass_potential,aes(x = x, y = y)) +
geom_point(aes(color = expected_pass_value),size=2, shape=16) +
scale_colour_gradient2(na.value="white",low = muted("green"), mid = "white", high = muted("purple"))+#,midpoint = 0.5
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
#geom_point(aes(x = x, y = y), size = 1, shape = 4)+
new_scale_fill() +
new_scale_color() +
geom_point(data=current_track,aes(x = x_ft, y = y_ft, fill = team_name), size = 5, shape = 21) +
geom_text(data=current_track,aes(x = x_ft, y = y_ft, label = jersey_number, colour = team_name), size = 3) +
geom_segment(aes(x = x_p, y = y_p, xend = puck$x_ft, yend = puck$y_ft),size=1.5, colour='brown')+
geom_point(aes(x = x_p, y = y_p), size = 2, shape = 16, colour='black') +
scale_colour_manual(values = c("USA" = "white", "Canada" = "white")) +
scale_fill_manual(values = c("USA" = "blue", "Canada" = "red")) +
labs(fill = "Team") +
guides(colour = "none")+
geom_segment(data=current_track,aes(x = x_ft, y = y_ft, xend = x_ft+vel_x, yend = y_ft+vel_y), #/sqrt(vel_x^2+vel_y^2) to get r=1
arrow = arrow(length = unit(0.2, "cm")),size=1, colour='cyan')
par(mfrow = c(2, 2))
p9 <- ggplot(data = pass_potential,aes(x = x, y = y)) +
geom_point(aes(color = max_pass_value),size=2, shape=16) +
scale_colour_gradient2(na.value="white",low = muted("green"), mid = "white", high = muted("purple"))+#,midpoint = 0.5
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
#geom_point(aes(x = x, y = y), size = 1, shape = 4)+
new_scale_fill() +
new_scale_color() +
geom_point(data=current_track,aes(x = x_ft, y = y_ft, fill = team_name), size = 5, shape = 21) +
geom_text(data=current_track,aes(x = x_ft, y = y_ft, label = jersey_number, colour = team_name), size = 3) +
geom_segment(aes(x = x_p, y = y_p, xend = puck$x_ft, yend = puck$y_ft),size=1.5, colour='brown')+
geom_point(aes(x = x_p, y = y_p), size = 2, shape = 16, colour='black') +
scale_colour_manual(values = c("USA" = "white", "Canada" = "white")) +
scale_fill_manual(values = c("USA" = "blue", "Canada" = "red")) +
labs(fill = "Team") +
guides(colour = "none")+
geom_segment(data=current_track,aes(x = x_ft, y = y_ft, xend = x_ft+vel_x, yend = y_ft+vel_y), #/sqrt(vel_x^2+vel_y^2) to get r=1
arrow = arrow(length = unit(0.2, "cm")),size=1, colour='cyan')
par(mfrow = c(2, 2))
p10 <- ggplot(data = pass_potential,aes(x = x, y = y)) +
geom_point(aes(color = best_case_pass_value),size=2, shape=16) +
scale_colour_gradient2(na.value="white",low = muted("green"), mid = "white", high = muted("purple"))+#,midpoint = 0.5
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
#geom_point(aes(x = x, y = y), size = 1, shape = 4)+
new_scale_fill() +
new_scale_color() +
geom_point(data=current_track,aes(x = x_ft, y = y_ft, fill = team_name), size = 5, shape = 21) +
geom_text(data=current_track,aes(x = x_ft, y = y_ft, label = jersey_number, colour = team_name), size = 3) +
geom_segment(aes(x = x_p, y = y_p, xend = puck$x_ft, yend = puck$y_ft),size=1.5, colour='brown')+
geom_point(aes(x = x_p, y = y_p), size = 2, shape = 16, colour='black') +
scale_colour_manual(values = c("USA" = "white", "Canada" = "white")) +
scale_fill_manual(values = c("USA" = "blue", "Canada" = "red")) +
labs(fill = "Team") +
guides(colour = "none")+
geom_segment(data=current_track,aes(x = x_ft, y = y_ft, xend = x_ft+vel_x, yend = y_ft+vel_y), #/sqrt(vel_x^2+vel_y^2) to get r=1
arrow = arrow(length = unit(0.2, "cm")),size=1, colour='cyan')
par(mfrow = c(2, 2))
p11 <- ggplot(data = pass_potential,aes(x = x, y = y)) +
geom_point(aes(color = successful_pass_prob),size=2, shape=16) +
scale_colour_gradient2(na.value="white",low = muted("green"), mid = "white", high = muted("purple"))+#,midpoint = 0.5
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
#geom_point(aes(x = x, y = y), size = 1, shape = 4)+
new_scale_fill() +
new_scale_color() +
geom_point(data=current_track,aes(x = x_ft, y = y_ft, fill = team_name), size = 5, shape = 21) +
geom_text(data=current_track,aes(x = x_ft, y = y_ft, label = jersey_number, colour = team_name), size = 3) +
geom_segment(aes(x = x_p, y = y_p, xend = puck$x_ft, yend = puck$y_ft),size=1.5, colour='brown')+
geom_point(aes(x = x_p, y = y_p), size = 2, shape = 16, colour='black') +
scale_colour_manual(values = c("USA" = "white", "Canada" = "white")) +
scale_fill_manual(values = c("USA" = "blue", "Canada" = "red")) +
labs(fill = "Team") +
guides(colour = "none")+
geom_segment(data=current_track,aes(x = x_ft, y = y_ft, xend = x_ft+vel_x, yend = y_ft+vel_y), #/sqrt(vel_x^2+vel_y^2) to get r=1
arrow = arrow(length = unit(0.2, "cm")),size=1, colour='cyan')
require(gridExtra)
grid.arrange(point_val[[2]],plot_half_rink(p), plot_half_rink(p2),plot_half_rink(p3),plot_half_rink(p4),
plot_half_rink(p5),plot_half_rink(p6),plot_half_rink(p7),plot_half_rink(p8),
plot_half_rink(p9),plot_half_rink(p10),plot_half_rink(p11),ncol=4)
require(gridExtra)
grid.arrange(point_val[[2]],plot_half_rink(p), plot_half_rink(p2),plot_half_rink(p3),plot_half_rink(p4),
plot_half_rink(p5),plot_half_rink(p6),plot_half_rink(p7),plot_half_rink(p8),
plot_half_rink(p9),plot_half_rink(p10),plot_half_rink(p11),ncol=4)
colnames(combine_dat)
