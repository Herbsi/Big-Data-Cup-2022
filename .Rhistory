current_event <- as.data.frame(do.call("cbind", json_events))
}
x_puck = 138.8515
y_puck = 68.89724
passes = create_points(x_puck,y_puck)
passes %>% head()
# Create a gif of this play
plot_rink(ggplot(tracking_data)) +
geom_point(aes(x = x_ft, y = y_ft, fill = team_name), size = 5, shape = 21) +
geom_text(aes(x = x_ft, y = y_ft, label = jersey_number, colour = team_name), size = 3) +
geom_point(data = passes, aes(x = x_coor, y = y_coor), size = 1, shape = 4) +
scale_colour_manual(values = c("USA" = "white", "Canada" = "white")) +
scale_fill_manual(values = c("USA" = "blue", "Canada" = "red")) +
labs(fill = "Team") +
guides(colour = "none")
frame = current_track$frame_id[1]
tracking_data = current_track %>% filter(frame_id==frame)
event = current_event %>% filter(clock_seconds==frame)
tracking_data
# Create a gif of this play
plot_rink(ggplot(tracking_data)) +
geom_point(aes(x = x_ft, y = y_ft, fill = team_name), size = 5, shape = 21) +
geom_text(aes(x = x_ft, y = y_ft, label = jersey_number, colour = team_name), size = 3) +
geom_point(data = passes, aes(x = x_coor, y = y_coor), size = 1, shape = 4) +
scale_colour_manual(values = c("USA" = "white", "Canada" = "white")) +
scale_fill_manual(values = c("USA" = "blue", "Canada" = "red")) +
labs(fill = "Team") +
guides(colour = "none")
# mp4 will save in the same spot as hockey_pipeline.R, I tried to fix but couldn't get it to.
power_play <- 0
shot <- 6
save_play(dat, power_play, shot)
tracks=tracking_data
points=passes
offence='Canada'
points=passes[162,]
teams = tracks$team_name %>% unique()
defence = teams[-which(teams==offence)]
off_tracks = tracks %>% filter(team_name==offence)
def_tracks = tracks %>% filter(team_name==defence)
off_min = c()
def_min = c()
for(row in 1:nrow(points)){
off_min = c(off_min, min(sqrt((points[row,'x_coor']-off_tracks$x_ft)^2+(points[row,'y_coor']-off_tracks$y_ft)^2)))
def_min = c(def_min, min(sqrt((points[row,'x_coor']-def_tracks$x_ft)^2+(points[row,'y_coor']-def_tracks$y_ft)^2)))
}
target_x = points$x_coor; target_y=points$y_coor
defenders_x=x_puck; defenders_y=y_puck
speed=10; dir=points$angle*180/pi
blockers_x=off_tracks[,'x_ft']; blockers_y=off_tracks[,'y_ft']
reaction_time = 0; max_speed = 20; blocker_time_multiplier = 5
angle = case_when(
dir <= 90 ~ 90 - dir,
dir > 90 & dir < 180 ~ dir - 90,
dir > 180 & dir < 270 ~ 270 - dir,
TRUE ~ dir - 270
)
reaction_x = defenders_x + ifelse(dir < 180, cos(angle * pi/180)*(speed * reaction_time), -cos(angle * pi / 180)*(speed * reaction_time))
reaction_y = defenders_y + ifelse(dir > 90 & dir < 270, sin(angle * pi/180)*(speed * reaction_time), -sin((angle * pi)/180)*(speed * reaction_time))
# Set (x1,y1) = location of defender after reaction time, (x2,y2) = target location, (x3,y3) = blocker location
i=1;j=1;k=1
x1 = reaction_x[i]; y1 = reaction_y[i]
x2 = target_x[k]; y2 = target_y[k]
x3 = blockers_x[j]; y3 = blockers_y[j]
# Calculate the perpendicular projection of the blocker's position onto the line formed by the defender and the target
b = -((x1-x3)*(x2-x1)+(y1-y3)*(y2-y1))/((x2-x1)^2+(y2-y1)^2)
intercept_x = x1 + b*(x2 - x1)
intercept_y = (y1 + b*(y2 - y1))
intercept = data.frame(x_int = unlist(intercept_x),y_int = unlist(intercept_y))
intercept= intercept[which((y1-intercept$y_int)<=(y1-y2) & 0<(y1-intercept$y_int)),]
plot_rink(ggplot(tracks)) +
geom_point(aes(x = x_ft, y = y_ft, fill = team_name), size = 5, shape = 21) +
geom_text(aes(x = x_ft, y = y_ft, label = jersey_number, colour = team_name), size = 3) +
geom_point(aes(x = x_puck, y = y_puck), size = 3, shape = 4) +
geom_point(data = passes[t,], aes(x = x_coor, y = y_coor), size = 2, shape = 4) +
geom_point(data =intercept,aes(x = x_int, y = y_int),color='red', size = 1, shape = 8) +
scale_colour_manual(values = c("USA" = "white", "Canada" = "white")) +
scale_fill_manual(values = c("USA" = "blue", "Canada" = "red")) +
geom_segment(data = passes[t,],aes(x = x_puck, y = y_puck, xend = x_coor, yend = y_coor),linetype=2)+
labs(fill = "Team") +
guides(colour = "none")
intercept
passes[t,]
passes[t,]
plot_rink(ggplot(tracks)) +
geom_point(aes(x = x_ft, y = y_ft, fill = team_name), size = 5, shape = 21) +
geom_text(aes(x = x_ft, y = y_ft, label = jersey_number, colour = team_name), size = 3) +
geom_point(aes(x = x_puck, y = y_puck), size = 3, shape = 4) +
geom_point(data = passes[t,], aes(x = x_coor, y = y_coor), size = 2, shape = 4) +
geom_point(data =intercept,aes(x = x_int, y = y_int),color='red', size = 1, shape = 8) +
scale_colour_manual(values = c("USA" = "white", "Canada" = "white")) +
scale_fill_manual(values = c("USA" = "blue", "Canada" = "red")) +
geom_segment(data = passes[t,],aes(x = x_puck, y = y_puck, xend = x_coor, yend = y_coor),linetype=2)+
labs(fill = "Team") +
guides(colour = "none")
reaction_x
reaction_y
reaction_x
reaction_y
x_puck
y_puck
off_min = c()
def_min = c()
for(row in 1:nrow(points)){
off_min = c(off_min, min(sqrt((points[row,'x_coor']-off_tracks$x_ft)^2+(points[row,'y_coor']-off_tracks$y_ft)^2)))
def_min = c(def_min, min(sqrt((points[row,'x_coor']-def_tracks$x_ft)^2+(points[row,'y_coor']-def_tracks$y_ft)^2)))
}
off_min
def_min
target_x = points$x_coor; target_y=points$y_coor
defenders_x=x_puck; defenders_y=y_puck
speed=10; dir=points$angle*180/pi
blockers_x=off_tracks[,'x_ft']; blockers_y=off_tracks[,'y_ft']
reaction_time = 0; max_speed = 20; blocker_time_multiplier = 5
angle = case_when(
dir <= 90 ~ 90 - dir,
dir > 90 & dir < 180 ~ dir - 90,
dir > 180 & dir < 270 ~ 270 - dir,
TRUE ~ dir - 270
)
defenders_x
defenders_y
plot_rink(ggplot(tracks)) +
geom_point(aes(x = x_ft, y = y_ft, fill = team_name), size = 5, shape = 21) +
geom_text(aes(x = x_ft, y = y_ft, label = jersey_number, colour = team_name), size = 3) +
geom_point(aes(x = x_puck, y = y_puck), size = 3, shape = 4) +
geom_point(data = passes[t,], aes(x = x_coor, y = y_coor), size = 2, shape = 4) +
geom_point(data =intercept,aes(x = x_int, y = y_int),color='red', size = 1, shape = 8) +
scale_colour_manual(values = c("USA" = "white", "Canada" = "white")) +
scale_fill_manual(values = c("USA" = "blue", "Canada" = "red")) +
geom_segment(data = passes[t,],aes(x = x_puck, y = y_puck, xend = x_coor, yend = y_coor),linetype=2)+
labs(fill = "Team") +
guides(colour = "none")
off_tracks[,'x_ft']
speed
reaction_time
angle
reaction_x = blockers_x + ifelse(dir < 180, cos(angle * pi/180)*(speed * reaction_time), -cos(angle * pi / 180)*(speed * reaction_time))
reaction_x
reaction_x = blockers_x + ifelse(dir < 180, cos(angle * pi/180)*(speed * reaction_time), -cos(angle * pi / 180)*(speed * reaction_time))
reaction_y = blockers_y + ifelse(dir > 90 & dir < 270, sin(angle * pi/180)*(speed * reaction_time), -sin((angle * pi)/180)*(speed * reaction_time))
# Set (x1,y1) = location of defender after reaction time, (x2,y2) = target location, (x3,y3) = blocker location
i=1;j=1;k=1
x1 = reaction_x[i]; y1 = reaction_y[i]
x2 = target_x[k]; y2 = target_y[k]
x3 = blockers_x[j]; y3 = blockers_y[j]
b = -((x1-x3)*(x2-x1)+(y1-y3)*(y2-y1))/((x2-x1)^2+(y2-y1)^2)
intercept_x = x1 + b*(x2 - x1)
intercept_y = (y1 + b*(y2 - y1))
intercept = data.frame(x_int = unlist(intercept_x),y_int = unlist(intercept_y))
intercept= intercept[which((y1-intercept$y_int)<=(y1-y2) & 0<(y1-intercept$y_int)),]
intercept
defenders_x
defenders_y
target_x = points$x_coor; target_y=points$y_coor
defenders_x=def_tracks[,'x_ft']; defenders_y=def_tracks[,'y_ft']
speed=10; dir=points$angle*180/pi
blockers_x=off_tracks[,'x_ft']; blockers_y=off_tracks[,'y_ft']
reaction_time = 0; max_speed = 20; blocker_time_multiplier = 5
# i. Determine defenders' positions after reaction_time total seconds at their same speed and direction
angle = case_when(
dir <= 90 ~ 90 - dir,
dir > 90 & dir < 180 ~ dir - 90,
dir > 180 & dir < 270 ~ 270 - dir,
TRUE ~ dir - 270
)
reaction_x = defenders_x + ifelse(dir < 180, cos(angle * pi/180)*(speed * reaction_time), -cos(angle * pi / 180)*(speed * reaction_time))
reaction_y = defenders_y + ifelse(dir > 90 & dir < 270, sin(angle * pi/180)*(speed * reaction_time), -sin((angle * pi)/180)*(speed * reaction_time))
reaction_x
reaction_y
i=1;j=1;k=1
x1 = reaction_x[i]; y1 = reaction_y[i]
x2 = target_x[k]; y2 = target_y[k]
x3 = blockers_x[j]; y3 = blockers_y[j]
b = -((x1-x3)*(x2-x1)+(y1-y3)*(y2-y1))/((x2-x1)^2+(y2-y1)^2)
intercept_x = x1 + b*(x2 - x1)
intercept_y = (y1 + b*(y2 - y1))
target_x
target_y
b = -((x1-x3)*(x2-x1)+(y1-y3)*(y2-y1))/((x2-x1)^2+(y2-y1)^2)
intercept_x = x1 + b*(x2 - x1)
intercept_y = (y1 + b*(y2 - y1))
intercept_y
intercept = data.frame(x_int = unlist(intercept_x),y_int = unlist(intercept_y))
intercept= intercept[which((y1-intercept$y_int)<=(y1-y2) & 0<(y1-intercept$y_int)),]
intercept
teams = tracks$team_name %>% unique()
defence = teams[-which(teams==offence)]
off_tracks = tracks %>% filter(team_name==offence)
def_tracks = tracks %>% filter(team_name==defence)
off_min = c()
def_min = c()
for(row in 1:nrow(points)){
off_min = c(off_min, min(sqrt((points[row,'x_coor']-off_tracks$x_ft)^2+(points[row,'y_coor']-off_tracks$y_ft)^2)))
def_min = c(def_min, min(sqrt((points[row,'x_coor']-def_tracks$x_ft)^2+(points[row,'y_coor']-def_tracks$y_ft)^2)))
}
target_x = points$x_coor; target_y=points$y_coor
defenders_x=x_puck; defenders_y=y_puck
speed=10; dir=points$angle*180/pi
blockers_x=off_tracks[,'x_ft']; blockers_y=off_tracks[,'y_ft']
reaction_time = 0; max_speed = 20; blocker_time_multiplier = 5
# i. Determine defenders' positions after reaction_time total seconds at their same speed and direction
angle = case_when(
dir <= 90 ~ 90 - dir,
dir > 90 & dir < 180 ~ dir - 90,
dir > 180 & dir < 270 ~ 270 - dir,
TRUE ~ dir - 270
)
reaction_x = defenders_x + ifelse(dir < 180, cos(angle * pi/180)*(speed * reaction_time), -cos(angle * pi / 180)*(speed * reaction_time))
reaction_y = defenders_y + ifelse(dir > 90 & dir < 270, sin(angle * pi/180)*(speed * reaction_time), -sin((angle * pi)/180)*(speed * reaction_time))
# Set (x1,y1) = location of defender after reaction time, (x2,y2) = target location, (x3,y3) = blocker location
i=1;j=1;k=1
x1 = reaction_x[i]; y1 = reaction_y[i]
x2 = target_x[k]; y2 = target_y[k]
x3 = blockers_x[j]; y3 = blockers_y[j]
# Calculate the perpendicular projection of the blocker's position onto the line formed by the defender and the target
b = -((x1-x3)*(x2-x1)+(y1-y3)*(y2-y1))/((x2-x1)^2+(y2-y1)^2)
intercept_x = x1 + b*(x2 - x1)
intercept_y = (y1 + b*(y2 - y1))
intercept = data.frame(x_int = unlist(intercept_x),y_int = unlist(intercept_y))
intercept= intercept[which((y1-intercept$y_int)<=(y1-y2) & 0<(y1-intercept$y_int)),]
plot_rink(ggplot(tracks)) +
geom_point(aes(x = x_ft, y = y_ft, fill = team_name), size = 5, shape = 21) +
geom_text(aes(x = x_ft, y = y_ft, label = jersey_number, colour = team_name), size = 3) +
geom_point(aes(x = x_puck, y = y_puck), size = 3, shape = 4) +
geom_point(data = passes[t,], aes(x = x_coor, y = y_coor), size = 2, shape = 4) +
geom_point(data =intercept,aes(x = x_int, y = y_int),color='red', size = 1, shape = 8) +
scale_colour_manual(values = c("USA" = "white", "Canada" = "white")) +
scale_fill_manual(values = c("USA" = "blue", "Canada" = "red")) +
geom_segment(data = passes[t,],aes(x = x_puck, y = y_puck, xend = x_coor, yend = y_coor),linetype=2)+
labs(fill = "Team") +
guides(colour = "none")
t=162
x_puck=138.8515;y_puck=68.89724
points=passes[t,]
tracks=tracking_data
offence = 'Canada'
teams = tracks$team_name %>% unique()
defence = teams[-which(teams==offence)]
off_tracks = tracks %>% filter(team_name==offence)
def_tracks = tracks %>% filter(team_name==defence)
off_min = c()
def_min = c()
for(row in 1:nrow(points)){
off_min = c(off_min, min(sqrt((points[row,'x_coor']-off_tracks$x_ft)^2+(points[row,'y_coor']-off_tracks$y_ft)^2)))
def_min = c(def_min, min(sqrt((points[row,'x_coor']-def_tracks$x_ft)^2+(points[row,'y_coor']-def_tracks$y_ft)^2)))
}
target_x = points$x_coor; target_y=points$y_coor
defenders_x=x_puck; defenders_y=y_puck
speed=10; dir=points$angle*180/pi
blockers_x=off_tracks[,'x_ft']; blockers_y=off_tracks[,'y_ft']
reaction_time = 0; max_speed = 20; blocker_time_multiplier = 5
# i. Determine defenders' positions after reaction_time total seconds at their same speed and direction
angle = case_when(
dir <= 90 ~ 90 - dir,
dir > 90 & dir < 180 ~ dir - 90,
dir > 180 & dir < 270 ~ 270 - dir,
TRUE ~ dir - 270
)
reaction_x = defenders_x + ifelse(dir < 180, cos(angle * pi/180)*(speed * reaction_time), -cos(angle * pi / 180)*(speed * reaction_time))
reaction_y = defenders_y + ifelse(dir > 90 & dir < 270, sin(angle * pi/180)*(speed * reaction_time), -sin((angle * pi)/180)*(speed * reaction_time))
# Set (x1,y1) = location of defender after reaction time, (x2,y2) = target location, (x3,y3) = blocker location
i=1;j=1;k=1
x1 = reaction_x[i]; y1 = reaction_y[i]
x2 = target_x[k]; y2 = target_y[k]
x3 = blockers_x[j]; y3 = blockers_y[j]
# Calculate the perpendicular projection of the blocker's position onto the line formed by the defender and the target
b = -((x1-x3)*(x2-x1)+(y1-y3)*(y2-y1))/((x2-x1)^2+(y2-y1)^2)
intercept_x = x1 + b*(x2 - x1)
intercept_y = (y1 + b*(y2 - y1))
intercept = data.frame(x_int = unlist(intercept_x),y_int = unlist(intercept_y))
intercept= intercept[which((y1-intercept$y_int)<=(y1-y2) & 0<(y1-intercept$y_int)),]
plot_rink(ggplot(tracks)) +
geom_point(aes(x = x_ft, y = y_ft, fill = team_name), size = 5, shape = 21) +
geom_text(aes(x = x_ft, y = y_ft, label = jersey_number, colour = team_name), size = 3) +
geom_point(aes(x = x_puck, y = y_puck), size = 3, shape = 4) +
geom_point(data = passes[t,], aes(x = x_coor, y = y_coor), size = 2, shape = 4) +
geom_point(data =intercept,aes(x = x_int, y = y_int),color='red', size = 1, shape = 8) +
scale_colour_manual(values = c("USA" = "white", "Canada" = "white")) +
scale_fill_manual(values = c("USA" = "blue", "Canada" = "red")) +
geom_segment(data = passes[t,],aes(x = x_puck, y = y_puck, xend = x_coor, yend = y_coor),linetype=2)+
labs(fill = "Team") +
guides(colour = "none")
points=passes[162,]
x_puck=138.8515;y_puck=68.89724
tracks=tracking_data
offence = 'Canada'
teams = tracks$team_name %>% unique()
defence = teams[-which(teams==offence)]
off_tracks = tracks %>% filter(team_name==offence)
def_tracks = tracks %>% filter(team_name==defence)
off_min = c()
def_min = c()
for(row in 1:nrow(points)){
off_min = c(off_min, min(sqrt((points[row,'x_coor']-off_tracks$x_ft)^2+(points[row,'y_coor']-off_tracks$y_ft)^2)))
def_min = c(def_min, min(sqrt((points[row,'x_coor']-def_tracks$x_ft)^2+(points[row,'y_coor']-def_tracks$y_ft)^2)))
}
target_x = points$x_coor; target_y=points$y_coor
defenders_x=x_puck; defenders_y=y_puck
speed=10; dir=points$angle*180/pi
blockers_x=off_tracks[,'x_ft']; blockers_y=off_tracks[,'y_ft']
reaction_time = 0; max_speed = 20; blocker_time_multiplier = 5
# i. Determine defenders' positions after reaction_time total seconds at their same speed and direction
angle = case_when(
dir <= 90 ~ 90 - dir,
dir > 90 & dir < 180 ~ dir - 90,
dir > 180 & dir < 270 ~ 270 - dir,
TRUE ~ dir - 270
)
reaction_x = defenders_x + ifelse(dir < 180, cos(angle * pi/180)*(speed * reaction_time), -cos(angle * pi / 180)*(speed * reaction_time))
reaction_y = defenders_y + ifelse(dir > 90 & dir < 270, sin(angle * pi/180)*(speed * reaction_time), -sin((angle * pi)/180)*(speed * reaction_time))
# Set (x1,y1) = location of defender after reaction time, (x2,y2) = target location, (x3,y3) = blocker location
i=1;j=1;k=1
x1 = reaction_x[i]; y1 = reaction_y[i]
x2 = target_x[k]; y2 = target_y[k]
x3 = blockers_x[j]; y3 = blockers_y[j]
# Calculate the perpendicular projection of the blocker's position onto the line formed by the defender and the target
b = -((x1-x3)*(x2-x1)+(y1-y3)*(y2-y1))/((x2-x1)^2+(y2-y1)^2)
intercept_x = x1 + b*(x2 - x1)
intercept_y = (y1 + b*(y2 - y1))
intercept = data.frame(x_int = unlist(intercept_x),y_int = unlist(intercept_y))
intercept= intercept[which((y1-intercept$y_int)<=(y1-y2) & 0<(y1-intercept$y_int)),]
plot_rink(ggplot(tracks)) +
geom_point(aes(x = x_ft, y = y_ft, fill = team_name), size = 5, shape = 21) +
geom_text(aes(x = x_ft, y = y_ft, label = jersey_number, colour = team_name), size = 3) +
geom_point(aes(x = x_puck, y = y_puck), size = 3, shape = 4) +
geom_point(data = points, aes(x = x_coor, y = y_coor), size = 2, shape = 4) +
geom_point(data =intercept,aes(x = x_int, y = y_int),color='red', size = 1, shape = 8) +
scale_colour_manual(values = c("USA" = "white", "Canada" = "white")) +
scale_fill_manual(values = c("USA" = "blue", "Canada" = "red")) +
geom_segment(data = points,aes(x = x_puck, y = y_puck, xend = x_coor, yend = y_coor),linetype=2)+
labs(fill = "Team") +
guides(colour = "none")
teams = tracks$team_name %>% unique()
defence = teams[-which(teams==offence)]
off_tracks = tracks %>% filter(team_name==offence)
def_tracks = tracks %>% filter(team_name==defence)
off_min = c()
def_min = c()
for(row in 1:nrow(points)){
off_min = c(off_min, min(sqrt((points[row,'x_coor']-off_tracks$x_ft)^2+(points[row,'y_coor']-off_tracks$y_ft)^2)))
def_min = c(def_min, min(sqrt((points[row,'x_coor']-def_tracks$x_ft)^2+(points[row,'y_coor']-def_tracks$y_ft)^2)))
}
target_x = points$x_coor; target_y=points$y_coor
defenders_x=x_puck; defenders_y=y_puck
speed=10; dir=points$angle*180/pi
blockers_x=off_tracks[,'x_ft']; blockers_y=off_tracks[,'y_ft']
reaction_time = 0; max_speed = 20; blocker_time_multiplier = 5
# i. Determine defenders' positions after reaction_time total seconds at their same speed and direction
angle = case_when(
dir <= 90 ~ 90 - dir,
dir > 90 & dir < 180 ~ dir - 90,
dir > 180 & dir < 270 ~ 270 - dir,
TRUE ~ dir - 270
)
reaction_x = defenders_x + ifelse(dir < 180, cos(angle * pi/180)*(speed * reaction_time), -cos(angle * pi / 180)*(speed * reaction_time))
reaction_y = defenders_y + ifelse(dir > 90 & dir < 270, sin(angle * pi/180)*(speed * reaction_time), -sin((angle * pi)/180)*(speed * reaction_time))
# Set (x1,y1) = location of defender after reaction time, (x2,y2) = target location, (x3,y3) = blocker location
i=1;j=1;k=1
x1 = reaction_x[i]; y1 = reaction_y[i]
x2 = target_x[k]; y2 = target_y[k]
x3 = blockers_x[j]; y3 = blockers_y[j]
# Calculate the perpendicular projection of the blocker's position onto the line formed by the defender and the target
b = -((x1-x3)*(x2-x1)+(y1-y3)*(y2-y1))/((x2-x1)^2+(y2-y1)^2)
intercept_x = x1 + b*(x2 - x1)
intercept_y = (y1 + b*(y2 - y1))
intercept = data.frame(x_int = unlist(intercept_x),y_int = unlist(intercept_y))
intercept= intercept[which((y1-intercept$y_int)<=(y1-y2) & 0<(y1-intercept$y_int)),]
plot_rink(ggplot(tracks)) +
geom_point(aes(x = x_ft, y = y_ft, fill = team_name), size = 5, shape = 21) +
geom_text(aes(x = x_ft, y = y_ft, label = jersey_number, colour = team_name), size = 3) +
geom_point(aes(x = x_puck, y = y_puck), size = 3, shape = 4) +
geom_point(data = points, aes(x = x_coor, y = y_coor), size = 2, shape = 4) +
geom_point(data =intercept,aes(x = x_int, y = y_int),color='red', size = 1, shape = 8) +
scale_colour_manual(values = c("USA" = "white", "Canada" = "white")) +
scale_fill_manual(values = c("USA" = "blue", "Canada" = "red")) +
geom_segment(data = points,aes(x = x_puck, y = y_puck, xend = x_coor, yend = y_coor),linetype=2)+
labs(fill = "Team") +
guides(colour = "none")
intercept
intercept_x
reaction_x
target_x
blockers_x
x1 = reaction_x[i]; y1 = reaction_y[i]
x2 = target_x[k]; y2 = target_y[k]
x3 = blockers_x; y3 = blockers_y
# Calculate the perpendicular projection of the blocker's position onto the line formed by the defender and the target
b = -((x1-x3)*(x2-x1)+(y1-y3)*(y2-y1))/((x2-x1)^2+(y2-y1)^2)
intercept_x = x1 + b*(x2 - x1)
intercept_y = (y1 + b*(y2 - y1))
intercept = data.frame(x_int = unlist(intercept_x),y_int = unlist(intercept_y))
intercept= intercept[which((y1-intercept$y_int)<=(y1-y2) & 0<(y1-intercept$y_int)),]
intercept
plot_rink(ggplot(tracks)) +
geom_point(aes(x = x_ft, y = y_ft, fill = team_name), size = 5, shape = 21) +
geom_text(aes(x = x_ft, y = y_ft, label = jersey_number, colour = team_name), size = 3) +
geom_point(aes(x = x_puck, y = y_puck), size = 3, shape = 4) +
geom_point(data = points, aes(x = x_coor, y = y_coor), size = 2, shape = 4) +
geom_point(data =intercept,aes(x = x_int, y = y_int),color='red', size = 1, shape = 8) +
scale_colour_manual(values = c("USA" = "white", "Canada" = "white")) +
scale_fill_manual(values = c("USA" = "blue", "Canada" = "red")) +
geom_segment(data = points,aes(x = x_puck, y = y_puck, xend = x_coor, yend = y_coor),linetype=2)+
labs(fill = "Team") +
guides(colour = "none")
get_to_point <- function(x_puck,y_puck,tracks, points, offence){
teams = tracks$team_name %>% unique()
defence = teams[-which(teams==offence)]
off_tracks = tracks %>% filter(team_name==offence)
def_tracks = tracks %>% filter(team_name==defence)
off_min = c()
def_min = c()
for(row in 1:nrow(points)){
off_min = c(off_min, min(sqrt((points[row,'x_coor']-off_tracks$x_ft)^2+(points[row,'y_coor']-off_tracks$y_ft)^2)))
def_min = c(def_min, min(sqrt((points[row,'x_coor']-def_tracks$x_ft)^2+(points[row,'y_coor']-def_tracks$y_ft)^2)))
}
target_x = points$x_coor; target_y=points$y_coor
defenders_x=x_puck; defenders_y=y_puck
speed=10; dir=points$angle*180/pi
blockers_x=off_tracks[,'x_ft']; blockers_y=off_tracks[,'y_ft']
reaction_time = 0; max_speed = 20; blocker_time_multiplier = 5
# i. Determine defenders' positions after reaction_time total seconds at their same speed and direction
angle = case_when(
dir <= 90 ~ 90 - dir,
dir > 90 & dir < 180 ~ dir - 90,
dir > 180 & dir < 270 ~ 270 - dir,
TRUE ~ dir - 270
)
reaction_x = defenders_x + ifelse(dir < 180, cos(angle * pi/180)*(speed * reaction_time), -cos(angle * pi / 180)*(speed * reaction_time))
reaction_y = defenders_y + ifelse(dir > 90 & dir < 270, sin(angle * pi/180)*(speed * reaction_time), -sin((angle * pi)/180)*(speed * reaction_time))
# Set (x1,y1) = location of defender after reaction time, (x2,y2) = target location, (x3,y3) = blocker location
i=1;k=1
x1 = reaction_x[i]; y1 = reaction_y[i]
x2 = target_x[k]; y2 = target_y[k]
x3 = blockers_x; y3 = blockers_y
# Calculate the perpendicular projection of the blocker's position onto the line formed by the defender and the target
b = -((x1-x3)*(x2-x1)+(y1-y3)*(y2-y1))/((x2-x1)^2+(y2-y1)^2)
intercept_x = x1 + b*(x2 - x1)
intercept_y = (y1 + b*(y2 - y1))
intercept = data.frame(x_int = unlist(intercept_x),y_int = unlist(intercept_y))
intercept= intercept[which((y1-intercept$y_int)<=(y1-y2) & 0<(y1-intercept$y_int)),]
plot_rink(ggplot(tracks)) +
geom_point(aes(x = x_ft, y = y_ft, fill = team_name), size = 5, shape = 21) +
geom_text(aes(x = x_ft, y = y_ft, label = jersey_number, colour = team_name), size = 3) +
geom_point(aes(x = x_puck, y = y_puck), size = 3, shape = 4) +
geom_point(data = points, aes(x = x_coor, y = y_coor), size = 2, shape = 4) +
geom_point(data =intercept,aes(x = x_int, y = y_int),color='red', size = 1, shape = 8) +
scale_colour_manual(values = c("USA" = "white", "Canada" = "white")) +
scale_fill_manual(values = c("USA" = "blue", "Canada" = "red")) +
geom_segment(data = points,aes(x = x_puck, y = y_puck, xend = x_coor, yend = y_coor),linetype=2)+
labs(fill = "Team") +
guides(colour = "none")
}
get_to_point(x_puck,y_puck,tracking_data,passes[162,],'Canada')
get_to_point(x_puck,y_puck,tracking_data,passes[162,],'USA')
get_to_point <- function(x_puck,y_puck,tracks, points, offence){
teams = tracks$team_name %>% unique()
defence = teams[-which(teams==offence)]
off_tracks = tracks %>% filter(team_name==offence)
def_tracks = tracks %>% filter(team_name==defence)
off_min = c()
def_min = c()
for(row in 1:nrow(points)){
off_min = c(off_min, min(sqrt((points[row,'x_coor']-off_tracks$x_ft)^2+(points[row,'y_coor']-off_tracks$y_ft)^2)))
def_min = c(def_min, min(sqrt((points[row,'x_coor']-def_tracks$x_ft)^2+(points[row,'y_coor']-def_tracks$y_ft)^2)))
}
target_x = points$x_coor; target_y=points$y_coor
defenders_x=x_puck; defenders_y=y_puck
speed=10; dir=points$angle*180/pi
blockers_x=off_tracks[,'x_ft']; blockers_y=off_tracks[,'y_ft']
reaction_time = 0; max_speed = 20; blocker_time_multiplier = 5
# i. Determine defenders' positions after reaction_time total seconds at their same speed and direction
angle = case_when(
dir <= 90 ~ 90 - dir,
dir > 90 & dir < 180 ~ dir - 90,
dir > 180 & dir < 270 ~ 270 - dir,
TRUE ~ dir - 270
)
reaction_x = defenders_x + ifelse(dir < 180, cos(angle * pi/180)*(speed * reaction_time), -cos(angle * pi / 180)*(speed * reaction_time))
reaction_y = defenders_y + ifelse(dir > 90 & dir < 270, sin(angle * pi/180)*(speed * reaction_time), -sin((angle * pi)/180)*(speed * reaction_time))
# Set (x1,y1) = location of defender after reaction time, (x2,y2) = target location, (x3,y3) = blocker location
i=1;k=1
x1 = reaction_x[i]; y1 = reaction_y[i]
x2 = target_x[k]; y2 = target_y[k]
x3 = blockers_x; y3 = blockers_y
# Calculate the perpendicular projection of the blocker's position onto the line formed by the defender and the target
b = -((x1-x3)*(x2-x1)+(y1-y3)*(y2-y1))/((x2-x1)^2+(y2-y1)^2)
intercept_x = x1 + b*(x2 - x1)
intercept_y = (y1 + b*(y2 - y1))
intercept = data.frame(x_int = unlist(intercept_x),y_int = unlist(intercept_y))
intercept= intercept[which((y1-intercept$y_int)<=(y1-y2) & 0<(y1-intercept$y_int)),]
plot_rink(ggplot(tracks)) +
geom_point(aes(x = x_ft, y = y_ft, fill = team_name), size = 5, shape = 21) +
geom_text(aes(x = x_ft, y = y_ft, label = jersey_number, colour = team_name), size = 3) +
geom_point(aes(x = x_puck, y = y_puck), size = 3, shape = 4) +
geom_point(data = points, aes(x = x_coor, y = y_coor), size = 2, shape = 4) +
geom_point(data =intercept,aes(x = x_int, y = y_int),color='grey', size = 1, shape = 8) +
scale_colour_manual(values = c("USA" = "white", "Canada" = "white")) +
scale_fill_manual(values = c("USA" = "blue", "Canada" = "red")) +
geom_segment(data = points,aes(x = x_puck, y = y_puck, xend = x_coor, yend = y_coor),linetype=2)+
labs(fill = "Team") +
guides(colour = "none")
}
get_to_point(x_puck,y_puck,tracking_data,passes[162,],'USA')
get_to_point(x_puck,y_puck,tracking_data,passes[162,],'Canada')
source("C:/Users/Paula/Desktop/Big-Data-Cup-2022-Private/code/visualization/hockey_pipeline.R")
get_to_point(x_puck,y_puck,tracking_data,passes[162,],'USA')
source("C:/Users/Paula/Desktop/Big-Data-Cup-2022-Private/code/visualization/hockey_pipeline.R")
View(get_to_point)
source("C:/Users/Paula/Desktop/Big-Data-Cup-2022-Private/code/visualization/hockey_pipeline.R")
get_to_point(x_puck,y_puck,tracking_data,passes[162,],'USA')
get_to_point(x_puck,y_puck,tracking_data,passes[162,],'Canada')
