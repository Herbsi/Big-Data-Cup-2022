warnings()
probs_to_point <- function(x_puck,y_puck, points, offence,want_plot=FALSE){
points=rbind(data.frame('theta'=c(),'x'=c(),'y'=c(),'t'=c()),points)
names(points)=c('theta','x','y','t')
tracks=tracking_data
#give slight movement to avoid dividing by zero
tracks$vel_x[which(tracks$vel_x==0)]=0.5
tracks$vel_y[which(tracks$vel_y==0)]=0.5
teams = tracks$team_name %>% unique()
defence = teams[-which(teams==offence)]
off_tracks = tracks %>% filter(team_name==offence)
def_tracks = tracks %>% filter(team_name==defence)
n_step = round(abs(sqrt(points$x^2+points$y^2)-sqrt(x_puck^2+y_puck^2)))
steps = seq(1,n_step,by=2) #look at every 1 foot distance along the line
t_step = seq(0,points$t,length.out=length(steps)) #for now, consider equal time to target
x_new = x_puck+steps*sin(points$theta)
y_new = y_puck+steps*cos(points$theta)
plot(c(x_puck, x_new,points$x),c(y_puck, y_new,points$y))
new_data = data.frame(x=x_new,y=y_new,t=t_step)
#point_val_off = 0
#point_val_def = 0
dist_to_points = matrix(nrow=length(steps), ncol=nrow(tracks))
for(player in 1:nrow(tracks)){
dist_to_points[,player]=apply(new_data,1,dist_to_xyt,x0=tracks$x_ft[player],y0=tracks$y_ft[player],vx=tracks$vel_x[player],vy=tracks$vel_y[player])
}
#distance from point of interests for each player
pickup_probs = abs(dnorm((dist_to_points+stick)/stick)-dnorm((dist_to_points-stick)/stick))
new_data2 = cbind(new_data,pickup_probs)
if(want_plot){
plot_pass=plot_half_rink(ggplot(tracks)) +
geom_point(aes(x = x_ft, y = y_ft, fill = team_name), size = 5, shape = 21) +
geom_text(aes(x = x_ft, y = y_ft, label = jersey_number, colour = team_name), size = 3) +
geom_segment(aes(x = x_ft, y = y_ft, xend = x_ft+vel_x, yend = y_ft+vel_y), #/sqrt(vel_x^2+vel_y^2) to get r=1
arrow = arrow(length = unit(0.2, "cm")),size=1, colour='cyan') +
geom_point(aes(x = x_puck+2, y = y_puck-0.5), size = 2, shape = 16, colour='black') +
geom_point(data = new_data2, aes(x = x, y = y), colour='grey',size = 1, shape = 16) +
scale_colour_manual(values = c("USA" = "white", "Canada" = "white")) +
scale_fill_manual(values = c("USA" = "blue", "Canada" = "red")) +
geom_segment(data = points,aes(x = x_puck, y = y_puck, xend = x, yend = y),linetype=2)+
geom_point(data = points, aes(x = x, y = y), size = 2, shape = 4, colour='grey') +
labs(fill = "Team") +
guides(colour = "none")
return(list(new_data2,plot_pass))
}else{
return(new_data2)
}
}
probs_to_point(x_puck,y_puck,new_pass[162,],'Canada',TRUE)
#point_val <- get_to_point(x_puck,y_puck,new_pass[162,],'Canada',want_plot=TRUE)
point_val[[1]] #gives you the value of that point -100 to 100, -100 defence has power, 0 neutral, +100 offence has power
probs_to_point <- function(x_puck,y_puck, points, offence,want_plot=FALSE){
points=rbind(data.frame('theta'=c(),'x'=c(),'y'=c(),'t'=c()),points)
names(points)=c('theta','x','y','t')
tracks=tracking_data
#give slight movement to avoid dividing by zero
tracks$vel_x[which(tracks$vel_x==0)]=0.5
tracks$vel_y[which(tracks$vel_y==0)]=0.5
teams = tracks$team_name %>% unique()
defence = teams[-which(teams==offence)]
off_tracks = tracks %>% filter(team_name==offence)
def_tracks = tracks %>% filter(team_name==defence)
n_step = round(abs(sqrt(points$x^2+points$y^2)-sqrt(x_puck^2+y_puck^2)))
steps = seq(1,n_step,by=2) #look at every 1 foot distance along the line
t_step = seq(0,points$t,length.out=length(steps)) #for now, consider equal time to target
x_new = x_puck+steps*sin(points$theta)
y_new = y_puck+steps*cos(points$theta)
plot(c(x_puck, x_new,points$x),c(y_puck, y_new,points$y))
new_data = data.frame(x=x_new,y=y_new,t=t_step)
#point_val_off = 0
#point_val_def = 0
dist_to_points = matrix(nrow=length(steps), ncol=nrow(tracks))
for(player in 1:nrow(tracks)){
dist_to_points[,player]=apply(new_data,1,dist_to_xyt,x0=tracks$x_ft[player],y0=tracks$y_ft[player],vx=tracks$vel_x[player],vy=tracks$vel_y[player])
}
#distance from point of interests for each player
pickup_probs = abs(dnorm((dist_to_points+stick)/stick)-dnorm((dist_to_points-stick)/stick))
new_data2 = cbind(new_data,pickup_probs)
if(want_plot){
plot_pass=plot_half_rink(ggplot(tracks)) +
geom_point(aes(x = x_ft, y = y_ft, fill = team_name), size = 5, shape = 21) +
geom_text(aes(x = x_ft, y = y_ft, label = jersey_number, colour = team_name), size = 3) +
geom_segment(aes(x = x_ft, y = y_ft, xend = x_ft+vel_x, yend = y_ft+vel_y), #/sqrt(vel_x^2+vel_y^2) to get r=1
arrow = arrow(length = unit(0.2, "cm")),size=1, colour='cyan') +
geom_point(aes(x = x_puck+2, y = y_puck-0.5), size = 2, shape = 16, colour='black') +
geom_point(data = new_data2, aes(x = x, y = y), colour='grey',size = 1, shape = 16) +
scale_colour_manual(values = c("USA" = "white", "Canada" = "white")) +
scale_fill_manual(values = c("USA" = "blue", "Canada" = "red")) +
geom_segment(data = points,aes(x = x_puck, y = y_puck, xend = x, yend = y),linetype=2)+
geom_point(data = points, aes(x = x, y = y), size = 2, shape = 4, colour='grey') +
labs(fill = "Team") +
guides(colour = "none")
return(list(new_data2,plot_pass))
}else{
return(new_data2)
}
}
point_val = probs_to_point(x_puck,y_puck,new_pass[162,],'Canada',TRUE)
#point_val <- get_to_point(x_puck,y_puck,new_pass[162,],'Canada',want_plot=TRUE)
point_val[[1]] #gives you the value of that point -100 to 100, -100 defence has power, 0 neutral, +100 offence has power
point_val[[2]]
source("C:/Users/Paula/Desktop/Big-Data-Cup-2022-Private/code/visualization/hockey_pipeline.R")
probs_to_point <- function(x_puck,y_puck, points, offence,want_plot=FALSE){
points=rbind(data.frame('theta'=c(),'x'=c(),'y'=c(),'t'=c()),points)
names(points)=c('theta','x','y','t')
tracks=tracking_data
#give slight movement to avoid dividing by zero
tracks$vel_x[which(tracks$vel_x==0)]=0.5
tracks$vel_y[which(tracks$vel_y==0)]=0.5
teams = tracks$team_name %>% unique()
defence = teams[-which(teams==offence)]
off_tracks = tracks %>% filter(team_name==offence)
def_tracks = tracks %>% filter(team_name==defence)
n_step = round(abs(sqrt(points$x^2+points$y^2)-sqrt(x_puck^2+y_puck^2)))
steps = seq(1,n_step,by=2) #look at every 1 foot distance along the line
t_step = seq(0,points$t,length.out=length(steps)) #for now, consider equal time to target
x_new = x_puck+steps*sin(points$theta)
y_new = y_puck+steps*cos(points$theta)
plot(c(x_puck, x_new,points$x),c(y_puck, y_new,points$y))
new_data = data.frame(x=x_new,y=y_new,t=t_step)
#point_val_off = 0
#point_val_def = 0
dist_to_points = matrix(nrow=length(steps), ncol=nrow(tracks))
for(player in 1:nrow(tracks)){
dist_to_points[,player]=apply(new_data,1,dist_to_xyt,x0=tracks$x_ft[player],y0=tracks$y_ft[player],vx=tracks$vel_x[player],vy=tracks$vel_y[player])
}
#distance from point of interests for each player
pickup_probs = abs(dnorm((dist_to_points+stick)/stick)-dnorm((dist_to_points-stick)/stick))
new_data2 = cbind(new_data,pickup_probs)
if(want_plot){
plot_pass=plot_half_rink(ggplot(tracks)) +
geom_point(aes(x = x_ft, y = y_ft, fill = team_name), size = 5, shape = 21) +
geom_text(aes(x = x_ft, y = y_ft, label = jersey_number, colour = team_name), size = 3) +
geom_segment(aes(x = x_ft, y = y_ft, xend = x_ft+vel_x, yend = y_ft+vel_y), #/sqrt(vel_x^2+vel_y^2) to get r=1
arrow = arrow(length = unit(0.2, "cm")),size=1, colour='cyan') +
geom_point(aes(x = x_puck+2, y = y_puck-0.5), size = 2, shape = 16, colour='black') +
geom_point(data = new_data2, aes(x = x, y = y), colour='grey',size = 1, shape = 16) +
scale_colour_manual(values = c("USA" = "white", "Canada" = "white")) +
scale_fill_manual(values = c("USA" = "blue", "Canada" = "red")) +
geom_segment(data = points,aes(x = x_puck, y = y_puck, xend = x, yend = y),linetype=2)+
geom_point(data = points, aes(x = x, y = y), size = 2, shape = 4, colour='grey') +
labs(fill = "Team") +
guides(colour = "none")
return(list(new_data2,plot_pass))
}else{
return(new_data2)
}
}
point_val = probs_to_point(x_puck,y_puck,new_pass[162,],'Canada',TRUE)
#point_val <- get_to_point(x_puck,y_puck,new_pass[162,],'Canada',want_plot=TRUE)
point_val[[1]] #gives you the value of that point -100 to 100, -100 defence has power, 0 neutral, +100 offence has power
point_val[[2]]
points=rbind(data.frame('theta'=c(),'x'=c(),'y'=c(),'t'=c()),points)
names(points)=c('theta','x','y','t')
tracks=tracking_data
#give slight movement to avoid dividing by zero
tracks$vel_x[which(tracks$vel_x==0)]=0.5
tracks$vel_y[which(tracks$vel_y==0)]=0.5
teams = tracks$team_name %>% unique()
defence = teams[-which(teams==offence)]
off_tracks = tracks %>% filter(team_name==offence)
def_tracks = tracks %>% filter(team_name==defence)
n_step = round(abs(sqrt(points$x^2+points$y^2)-sqrt(x_puck^2+y_puck^2)))
steps = seq(1,n_step,by=2) #look at every 1 foot distance along the line
t_step = seq(0,points$t,length.out=length(steps)) #for now, consider equal time to target
x_new = points$x-steps*sin(points$theta)
y_new = points$y-steps*cos(points$theta)
plot(c(x_puck, x_new,points$x),c(y_puck, y_new,points$y))
points=rbind(data.frame('theta'=c(),'x'=c(),'y'=c(),'t'=c()),points)
names(points)=c('theta','x','y','t')
tracks=tracking_data
#give slight movement to avoid dividing by zero
tracks$vel_x[which(tracks$vel_x==0)]=0.5
tracks$vel_y[which(tracks$vel_y==0)]=0.5
teams = tracks$team_name %>% unique()
defence = teams[-which(teams==offence)]
off_tracks = tracks %>% filter(team_name==offence)
def_tracks = tracks %>% filter(team_name==defence)
n_step = round(abs(sqrt(points$x^2+points$y^2)-sqrt(x_puck^2+y_puck^2)))+1
steps = seq(1,n_step,by=2) #look at every 1 foot distance along the line
t_step = seq(0,points$t,length.out=length(steps)) #for now, consider equal time to target
x_new = points$x-steps*sin(points$theta)
y_new = points$y-steps*cos(points$theta)
plot(c(x_puck, x_new,points$x),c(y_puck, y_new,points$y))
points=rbind(data.frame('theta'=c(),'x'=c(),'y'=c(),'t'=c()),points)
names(points)=c('theta','x','y','t')
tracks=tracking_data
#give slight movement to avoid dividing by zero
tracks$vel_x[which(tracks$vel_x==0)]=0.5
tracks$vel_y[which(tracks$vel_y==0)]=0.5
teams = tracks$team_name %>% unique()
defence = teams[-which(teams==offence)]
off_tracks = tracks %>% filter(team_name==offence)
def_tracks = tracks %>% filter(team_name==defence)
n_step = round(abs(sqrt(points$x^2+points$y^2)-sqrt(x_puck^2+y_puck^2)))+2
steps = seq(1,n_step,by=2) #look at every 1 foot distance along the line
t_step = seq(0,points$t,length.out=length(steps)) #for now, consider equal time to target
x_new = points$x-steps*sin(points$theta)
y_new = points$y-steps*cos(points$theta)
plot(c(x_puck, x_new,points$x),c(y_puck, y_new,points$y))
points=rbind(data.frame('theta'=c(),'x'=c(),'y'=c(),'t'=c()),points)
names(points)=c('theta','x','y','t')
tracks=tracking_data
#give slight movement to avoid dividing by zero
tracks$vel_x[which(tracks$vel_x==0)]=0.5
tracks$vel_y[which(tracks$vel_y==0)]=0.5
teams = tracks$team_name %>% unique()
defence = teams[-which(teams==offence)]
off_tracks = tracks %>% filter(team_name==offence)
def_tracks = tracks %>% filter(team_name==defence)
n_step = round(abs(sqrt(points$x^2+points$y^2)-sqrt(x_puck^2+y_puck^2)))+2
steps = seq(1,n_step,by=2) #look at every 1 foot distance along the line
t_step = seq(0,points$t,length.out=length(steps)) #for now, consider equal time to target
x_new = points$x-steps*sin(points$theta)
y_new = points$y-steps*cos(points$theta)
plot(c(x_puck, x_new,points$x),c(y_puck, y_new,points$y))
new_data = data.frame(x=x_new,y=y_new,t=t_step)
#point_val_off = 0
#point_val_def = 0
dist_to_points = matrix(nrow=length(steps), ncol=nrow(tracks))
for(player in 1:nrow(tracks)){
dist_to_points[,player]=apply(new_data,1,dist_to_xyt,x0=tracks$x_ft[player],y0=tracks$y_ft[player],vx=tracks$vel_x[player],vy=tracks$vel_y[player])
}
#distance from point of interests for each player
pickup_probs = abs(dnorm((dist_to_points+stick)/stick)-dnorm((dist_to_points-stick)/stick))
new_data2 = cbind(new_data,pickup_probs)
plot_half_rink(ggplot(tracks)) +
geom_point(aes(x = x_ft, y = y_ft, fill = team_name), size = 5, shape = 21) +
geom_text(aes(x = x_ft, y = y_ft, label = jersey_number, colour = team_name), size = 3) +
geom_segment(aes(x = x_ft, y = y_ft, xend = x_ft+vel_x, yend = y_ft+vel_y), #/sqrt(vel_x^2+vel_y^2) to get r=1
arrow = arrow(length = unit(0.2, "cm")),size=1, colour='cyan') +
geom_point(aes(x = x_puck+2, y = y_puck-0.5), size = 2, shape = 16, colour='black') +
geom_point(data = new_data2, aes(x = x, y = y), colour='grey',size = 1, shape = 16) +
scale_colour_manual(values = c("USA" = "white", "Canada" = "white")) +
scale_fill_manual(values = c("USA" = "blue", "Canada" = "red")) +
geom_segment(data = points,aes(x = x_puck, y = y_puck, xend = x, yend = y),linetype=2)+
geom_point(data = points, aes(x = x, y = y), size = 2, shape = 4, colour='grey') +
labs(fill = "Team") +
guides(colour = "none")
probs_to_point <- function(x_puck,y_puck, points, offence,want_plot=FALSE){
points=rbind(data.frame('theta'=c(),'x'=c(),'y'=c(),'t'=c()),points)
names(points)=c('theta','x','y','t')
tracks=tracking_data
#give slight movement to avoid dividing by zero
tracks$vel_x[which(tracks$vel_x==0)]=0.5
tracks$vel_y[which(tracks$vel_y==0)]=0.5
teams = tracks$team_name %>% unique()
defence = teams[-which(teams==offence)]
off_tracks = tracks %>% filter(team_name==offence)
def_tracks = tracks %>% filter(team_name==defence)
n_step = round(abs(sqrt(points$x^2+points$y^2)-sqrt(x_puck^2+y_puck^2)))+2
steps = seq(1,n_step,by=2) #look at every 1 foot distance along the line
t_step = seq(0,points$t,length.out=length(steps)) #for now, consider equal time to target
x_new = points$x-steps*sin(points$theta)
y_new = points$y-steps*cos(points$theta)
#plot(c(x_puck, x_new,points$x),c(y_puck, y_new,points$y))
new_data = data.frame(x=x_new,y=y_new,t=t_step)
#point_val_off = 0
#point_val_def = 0
dist_to_points = matrix(nrow=length(steps), ncol=nrow(tracks))
for(player in 1:nrow(tracks)){
dist_to_points[,player]=apply(new_data,1,dist_to_xyt,x0=tracks$x_ft[player],y0=tracks$y_ft[player],vx=tracks$vel_x[player],vy=tracks$vel_y[player])
}
#distance from point of interests for each player
pickup_probs = abs(dnorm((dist_to_points+stick)/stick)-dnorm((dist_to_points-stick)/stick))
new_data2 = cbind(new_data,pickup_probs)
if(want_plot){
plot_pass=plot_half_rink(ggplot(tracks)) +
geom_point(aes(x = x_ft, y = y_ft, fill = team_name), size = 5, shape = 21) +
geom_text(aes(x = x_ft, y = y_ft, label = jersey_number, colour = team_name), size = 3) +
geom_segment(aes(x = x_ft, y = y_ft, xend = x_ft+vel_x, yend = y_ft+vel_y), #/sqrt(vel_x^2+vel_y^2) to get r=1
arrow = arrow(length = unit(0.2, "cm")),size=1, colour='cyan') +
geom_point(aes(x = x_puck+2, y = y_puck-0.5), size = 2, shape = 16, colour='black') +
geom_point(data = new_data2, aes(x = x, y = y), colour='grey',size = 1, shape = 16) +
scale_colour_manual(values = c("USA" = "white", "Canada" = "white")) +
scale_fill_manual(values = c("USA" = "blue", "Canada" = "red")) +
geom_segment(data = points,aes(x = x_puck, y = y_puck, xend = x, yend = y),linetype=2)+
geom_point(data = points, aes(x = x, y = y), size = 2, shape = 4, colour='grey') +
labs(fill = "Team") +
guides(colour = "none")
return(list(new_data2,plot_pass))
}else{
return(new_data2)
}
}
point_val = probs_to_point(x_puck,y_puck,new_pass[162,],'Canada',TRUE)
#point_val <- get_to_point(x_puck,y_puck,new_pass[162,],'Canada',want_plot=TRUE)
point_val[[1]] #gives you the value of that point -100 to 100, -100 defence has power, 0 neutral, +100 offence has power
point_val[[2]]
apply(new_pass[162,],1,probs_to_point,x_puck=138.8515,y_puck=68.89724,offence='Canada',want_plot=FALSE)
all_point_val <- apply(new_pass[162,],1,probs_to_point,x_puck=138.8515,y_puck=68.89724,offence='Canada',want_plot=FALSE)
all_point_val
all_point_val <- apply(new_pass[160:165,],1,probs_to_point,x_puck=138.8515,y_puck=68.89724,offence='Canada',want_plot=FALSE)
all_point_val
all_point_val$160
all_point_val$'160'
all_point_val <- apply(new_pass,1,probs_to_point,x_puck=138.8515,y_puck=68.89724,offence='Canada',want_plot=FALSE)
all_point_val[[1]]
all_point_val[1,]
all_point_val[[1,]]
all_point_val[[1]]
tracks=tracking_data
all_pass=new_pass
probs=all_point_val
tracks
tracks
all_pass[160,]
all_pass[160,]
all_point_val[[160]]
point_val = probs_to_point(x_puck,y_puck,new_pass[160,],'Canada',TRUE)
#point_val <- get_to_point(x_puck,y_puck,new_pass[162,],'Canada',want_plot=TRUE)
point_val[[1]] #gives you the value of that point -100 to 100, -100 defence has power, 0 neutral, +100 offence has power
point_val[[2]]
points=new_pass[160,]
y_new = points$y-steps*cos(points$theta)
points=rbind(data.frame('theta'=c(),'x'=c(),'y'=c(),'t'=c()),points)
names(points)=c('theta','x','y','t')
tracks=tracking_data
#give slight movement to avoid dividing by zero
tracks$vel_x[which(tracks$vel_x==0)]=0.5
tracks$vel_y[which(tracks$vel_y==0)]=0.5
teams = tracks$team_name %>% unique()
defence = teams[-which(teams==offence)]
off_tracks = tracks %>% filter(team_name==offence)
def_tracks = tracks %>% filter(team_name==defence)
n_step = round(abs(sqrt(points$x^2+points$y^2)-sqrt(x_puck^2+y_puck^2)))+2
steps = seq(1,n_step,by=2) #look at every 1 foot distance along the line
t_step = seq(0,points$t,length.out=length(steps)) #for now, consider equal time to target
x_new = points$x-steps*sin(points$theta)
y_new = points$y-steps*cos(points$theta)
plot(c(x_puck, x_new,points$x),c(y_puck, y_new,points$y))
tan((y_puck-points$y)/(x_puck-points$x))
theta_p = tan((y_puck-points$y)/(x_puck-points$x))
x_new = points$x-steps*sin(theta_p)
y_new = points$y-steps*cos(theta_p)
plot(c(x_puck, x_new,points$x),c(y_puck, y_new,points$y))
theta_p = atan((y_puck-points$y)/(x_puck-points$x))
x_new = points$x-steps*sin(theta_p)
y_new = points$y-steps*cos(theta_p)
plot(c(x_puck, x_new,points$x),c(y_puck, y_new,points$y))
theta_p = atan((y_puck-points$y)/(x_puck-points$x))
x_new = points$x-steps*cos(theta_p)
y_new = points$y-steps*sin(theta_p)
plot(c(x_puck, x_new,points$x),c(y_puck, y_new,points$y))
steps
steps*cos(theta_p)
sqrt((points$x-x_puck)^2+(points$y-y_puck)^2)
n_step = round(sqrt((points$x-x_puck)^2+(points$y-y_puck)^2))
n_step = round(sqrt((points$x-x_puck)^2+(points$y-y_puck)^2))
steps = seq(1,n_step,by=5) #look at every 1 foot distance along the line
t_step = seq(0,points$t,length.out=length(steps)) #for now, consider equal time to target
theta_p = atan((y_puck-points$y)/(x_puck-points$x))
x_new = points$x-steps*cos(theta_p)
y_new = points$y-steps*sin(theta_p)
plot(c(x_puck, x_new,points$x),c(y_puck, y_new,points$y))
n_step = round(sqrt((points$x-x_puck)^2+(points$y-y_puck)^2))
steps = seq(1,n_step,by=4) #look at every 1 foot distance along the line
t_step = seq(0,points$t,length.out=length(steps)) #for now, consider equal time to target
theta_p = atan((y_puck-points$y)/(x_puck-points$x))
x_new = points$x-steps*cos(theta_p)
y_new = points$y-steps*sin(theta_p)
plot(c(x_puck, x_new,points$x),c(y_puck, y_new,points$y))
n_step = round(sqrt((points$x-x_puck)^2+(points$y-y_puck)^2))
steps = seq(1,n_step,by=5) #look at every 5 foot distance along the line
t_step = seq(0,points$t,length.out=length(steps))
n_step = round(sqrt((points$x-x_puck)^2+(points$y-y_puck)^2))
steps = seq(1,n_step,by=5) #look at every 5 foot distance along the line
t_step = seq(0,points$t,length.out=length(steps)) #for now, consider equal time to target
theta_p = atan((y_puck-points$y)/(x_puck-points$x))
x_new = points$x-steps*cos(theta_p)
y_new = points$y-steps*sin(theta_p)
plot(c(x_puck, x_new,points$x),c(y_puck, y_new,points$y))
points=new_pass[162,]
points=rbind(data.frame('theta'=c(),'x'=c(),'y'=c(),'t'=c()),points)
names(points)=c('theta','x','y','t')
tracks=tracking_data
#give slight movement to avoid dividing by zero
tracks$vel_x[which(tracks$vel_x==0)]=0.5
tracks$vel_y[which(tracks$vel_y==0)]=0.5
teams = tracks$team_name %>% unique()
defence = teams[-which(teams==offence)]
off_tracks = tracks %>% filter(team_name==offence)
def_tracks = tracks %>% filter(team_name==defence)
n_step = round(sqrt((points$x-x_puck)^2+(points$y-y_puck)^2))
steps = seq(1,n_step,by=5) #look at every 5 foot distance along the line
t_step = seq(0,points$t,length.out=length(steps)) #for now, consider equal time to target
theta_p = atan((y_puck-points$y)/(x_puck-points$x))
x_new = points$x-steps*cos(theta_p)
y_new = points$y-steps*sin(theta_p)
plot(c(x_puck, x_new,points$x),c(y_puck, y_new,points$y))
source("C:/Users/Paula/Desktop/Big-Data-Cup-2022-Private/code/visualization/hockey_pipeline.R")
point_val = probs_to_point(x_puck,y_puck,new_pass[160,],'Canada',TRUE)
#point_val <- get_to_point(x_puck,y_puck,new_pass[162,],'Canada',want_plot=TRUE)
point_val[[1]] #gives you the value of that point -100 to 100, -100 defence has power, 0 neutral, +100 offence has power
point_val[[2]]
source("C:/Users/Paula/Desktop/Big-Data-Cup-2022-Private/code/visualization/hockey_pipeline.R")
point_val = probs_to_point(x_puck,y_puck,new_pass[160,],'Canada',TRUE)
#point_val <- get_to_point(x_puck,y_puck,new_pass[162,],'Canada',want_plot=TRUE)
point_val[[1]] #gives you the value of that point -100 to 100, -100 defence has power, 0 neutral, +100 offence has power
point_val[[2]]
tracks\
tracks
# Create image of this frame with potential passes
plot_half_rink(ggplot(tracking_data)) +
geom_point(aes(x = x_ft, y = y_ft, fill = team_name), size = 5, shape = 21) +
geom_text(aes(x = x_ft, y = y_ft, label = jersey_number, colour = team_name), size = 3) +
geom_point(aes(x = x_puck+2, y = y_puck-0.5), size = 2, shape = 16, colour='black') +
geom_point(data = new_pass, aes(x = x, y = y), size = 1, shape = 4) +
scale_colour_manual(values = c("USA" = "white", "Canada" = "white")) +
scale_fill_manual(values = c("USA" = "blue", "Canada" = "red")) +
labs(fill = "Team") +
guides(colour = "none")+
geom_segment(aes(x = x_ft, y = y_ft, xend = x_ft+vel_x, yend = y_ft+vel_y), #/sqrt(vel_x^2+vel_y^2) to get r=1
arrow = arrow(length = unit(0.2, "cm")),size=1, colour='cyan')
load.libraries = c("rjson", "jsonlite", "tidyverse", "gganimate","ggpmisc")
install.lib = load.libraries[!load.libraries %in% installed.packages()]
for (libs in install.lib) {install.packages(libs, dependencies = TRUE)}
sapply(load.libraries, require, character = TRUE)
source("C:/Users/Paula/Desktop/Big-Data-Cup-2022-Private/code/visualization/hockey_pipeline.R")
setwd("C:/Users/Paula/Desktop/Big-Data-Cup-2022-Private")
json_file <- "data/BDC_2022_all_data.json"
dat <- fromJSON(json_file)
r=0 # powerplay of interest
t=7 # shot of interest
# Set up the tracking data
line1 <- paste('dat$relevant_events$\'',r,'\'$tracks$\'',t,'\'',sep='')
line2 <- eval(parse(text=line1))
if(length(line2$frame_id)!=0){
json_tracks <- lapply(line2, function(x) {
x[sapply(x, is.null)] <- NA
unlist(x)
})
current_track <- as.data.frame(do.call("cbind", json_tracks))
}
current_track$frame_id = current_track$frame_id %>% as.integer()
current_track$period = current_track$period %>% as.integer()
current_track$track_id = current_track$track_id %>% as.integer()
current_track$jersey_number = current_track$jersey_number %>% as.integer()
current_track$x_ft = current_track$x_ft %>% as.double()
current_track$y_ft = current_track$y_ft %>% as.double()
current_track$vel_x = current_track$vel_x %>% as.double()
current_track$vel_y = current_track$vel_y %>% as.double()
# Set up the related event data
line3 <- paste('dat$relevant_events$\'',r,'\'',sep='')
line4 <- eval(parse(text=line3))
if(length(line4$game_date)!=0){
json_events <- lapply(line4[1:24], function(x) {
x[sapply(x, is.null)] <- NA
unlist(x)
})
current_event <- as.data.frame(do.call("cbind", json_events))
}
source("C:/Users/Paula/Desktop/Big-Data-Cup-2022-Private/code/visualization/hockey_pipeline.R")
# Given a set location for the puck, find all potential spots the puck could be moved to
x_puck = 138.8515
y_puck = 68.89724
#passes = create_points(x_puck,y_puck)
theta = seq(-pi,pi,by=0.15)
passes = data.frame(x=c(),y=c(), t=c())
for(angle in theta){
passes = rbind(passes,puck_motion_model2(x_puck,y_puck,angle))
}
#passes = mapply(puck_motion_model2,x0=x_puck,y0=y_puck,angle=theta,vmag=speed_puck, t = seq(0,15,0.2), mu = 0.1, beta = 0.1322, g = 32.174)
new_pass <- cbind(theta,clean_pass(passes))
new_pass %>% head()
# Select single frame to analyze
frame = current_track$frame_id[1]
tracking_data = current_track %>% filter(frame_id==frame)
event = current_event %>% filter(clock_seconds==frame)
tracking_data
# Create image of this frame with potential passes
plot_half_rink(ggplot(tracking_data)) +
geom_point(aes(x = x_ft, y = y_ft, fill = team_name), size = 5, shape = 21) +
geom_text(aes(x = x_ft, y = y_ft, label = jersey_number, colour = team_name), size = 3) +
geom_point(aes(x = x_puck+2, y = y_puck-0.5), size = 2, shape = 16, colour='black') +
geom_point(data = new_pass, aes(x = x, y = y), size = 1, shape = 4) +
scale_colour_manual(values = c("USA" = "white", "Canada" = "white")) +
scale_fill_manual(values = c("USA" = "blue", "Canada" = "red")) +
labs(fill = "Team") +
guides(colour = "none")+
geom_segment(aes(x = x_ft, y = y_ft, xend = x_ft+vel_x, yend = y_ft+vel_y), #/sqrt(vel_x^2+vel_y^2) to get r=1
arrow = arrow(length = unit(0.2, "cm")),size=1, colour='cyan')
point_val = probs_to_point(x_puck,y_puck,new_pass[160,],'Canada',TRUE)
#point_val <- get_to_point(x_puck,y_puck,new_pass[162,],'Canada',want_plot=TRUE)
point_val[[1]] #gives you the value of that point -100 to 100, -100 defence has power, 0 neutral, +100 offence has power
point_val[[2]]
#point_val <- get_to_point(x_puck,y_puck,passes[162,],'Canada',want_plot=FALSE)
#point_val
#all_point_val <- apply(passes,1,get_to_point,x_puck=138.8515,y_puck=68.89724,offence='Canada',want_plot=FALSE)
#all_offence = unlist(all_point_val)[which(names(unlist(all_point_val))=='Off_val')]
#all_defence = unlist(all_point_val)[-which(names(unlist(all_point_val))=='Off_val')]
#all_pressure = cbind(Off = all_offence,Def = all_defence, Diff = all_offence-all_defence)
all_point_val <- apply(new_pass,1,probs_to_point,x_puck=138.8515,y_puck=68.89724,offence='Canada',want_plot=FALSE)
combine_probs <- function(tracks=tracking_data, all_pass=new_pass, probs=all_point_val){
tracks
all_pass[160,]
all_point_val[[160]]
}
rownames(all_pressure) = NULL
#point_val <- get_to_point(x_puck,y_puck,passes[162,],'Canada',want_plot=FALSE)
#point_val
#all_point_val <- apply(passes,1,get_to_point,x_puck=138.8515,y_puck=68.89724,offence='Canada',want_plot=FALSE)
#all_offence = unlist(all_point_val)[which(names(unlist(all_point_val))=='Off_val')]
#all_defence = unlist(all_point_val)[-which(names(unlist(all_point_val))=='Off_val')]
#all_pressure = cbind(Off = all_offence,Def = all_defence, Diff = all_offence-all_defence)
all_point_val <- apply(new_pass,1,probs_to_point,x_puck=138.8515,y_puck=68.89724,offence='Canada',want_plot=FALSE)
combine_probs <- function(tracks=tracking_data, all_pass=new_pass, probs=all_point_val){
tracks
all_pass[160,]
all_point_val[[160]]
}
#rownames(all_pressure) = NULL
#passes_with_vals <- cbind(passes,all_pressure)
